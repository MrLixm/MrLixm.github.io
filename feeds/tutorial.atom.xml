<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Liam Collod Website - tutorial</title><link href="https://mrlixm.github.io/" rel="alternate"></link><link href="https://mrlixm.github.io/feeds/tutorial.atom.xml" rel="self"></link><id>https://mrlixm.github.io/</id><updated>2021-12-17T23:46:00+01:00</updated><entry><title>Color-management in Substance Painter with OCIO</title><link href="https://mrlixm.github.io/blog/substance-painter-color-management/" rel="alternate"></link><published>2021-12-08T19:03:00+01:00</published><updated>2021-12-17T23:46:00+01:00</updated><author><name>Liam Collod</name></author><id>tag:mrlixm.github.io,2021-12-08:/blog/substance-painter-color-management/</id><summary type="html">&lt;p&gt;The long-awaited OCIO feature is here, now we gotta find how it works.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;It’s there ! After so much time, Substance-Painter finally saw itself getting
a shiny new color-management system with OCIO support. We’re going to dive
deeper inside and see how it works.&lt;/p&gt;
&lt;p&gt;The article is divided into two parts.
You got first a theoretical part that will try to explain how
color-management works. This can help you debug issues and just not tweak
settings like a blind machine. This part is not mandatory though. You can
skip straight to the &lt;a href="#substance-setup-workflow"&gt;Substance Setup &amp;amp; Workflow&lt;/a&gt; section if desired.&lt;/p&gt;
&lt;aside class="m-note m-info"&gt;
&lt;p&gt;OCIO was introduced in &lt;a href="https://substance3d.adobe.com/documentation/spdoc/version-7-4-223053247.html"&gt;Substance-Painter version 7.4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the version used through this article and some features might
changed at the time you are reading this. I will try to keep the article
updated thought.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-info"&gt;
&lt;h3&gt;Official Documentation&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://substance3d.adobe.com/documentation/spdoc/color-management-223053233.html"&gt;https://substance3d.adobe.com/documentation/spdoc/color-management-223053233.html&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="contents" id="contents"&gt;
&lt;h3&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#color-managed-workflow" id="id2"&gt;Color-managed Workflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#data-types-color-and-scalar" id="id3"&gt;Data types: Color and Scalar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#scalar" id="id4"&gt;Scalar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#color" id="id5"&gt;Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#in-substance" id="id6"&gt;In Substance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#workflow-sections" id="id7"&gt;Workflow Sections&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#input" id="id8"&gt;Input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workspace" id="id9"&gt;Workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#display" id="id10"&gt;Display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#output" id="id11"&gt;Output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example" id="id12"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#substance-setup-workflow" id="id13"&gt;Substance Setup &amp;amp; Workflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#new-project" id="id14"&gt;New Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ocio-config" id="id15"&gt;OCIO config&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-config" id="id16"&gt;Custom config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#environment-variable" id="id17"&gt;Environment variable&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#global-settings" id="id18"&gt;Global Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set-locally-at-startup" id="id19"&gt;Set locally at startup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#substance-parameters-for-ocio-configs" id="id20"&gt;Substance parameters for OCIO configs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-project-conclusion" id="id21"&gt;New Project : Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workspace-setup-in-sp" id="id22"&gt;Workspace Setup in Sp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-setup-in-sp" id="id23"&gt;Display Setup in Sp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#displaying-color-and-scalar-data" id="id24"&gt;Displaying Color and Scalar data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#input-setup-in-sp" id="id25"&gt;Input Setup in Sp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#shelf-resources" id="id26"&gt;Shelf Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-color-picker" id="id27"&gt;The color-picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#environment" id="id28"&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#masks" id="id29"&gt;Masks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#output-setup-in-sp" id="id30"&gt;Output Setup in Sp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#aces-workflow" id="id31"&gt;ACES Workflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#aces-config-setup" id="id32"&gt;ACES - Config setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aces-what-to-do-when-working" id="id33"&gt;ACES - What to do when working&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#aces-display" id="id34"&gt;ACES - Display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aces-inputs" id="id35"&gt;ACES - Inputs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#aces-environment" id="id36"&gt;ACES - Environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#aces-colorpicker" id="id37"&gt;ACES - Colorpicker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aces-output" id="id38"&gt;ACES - Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ocio-implementation-issues" id="id39"&gt;OCIO Implementation Issues&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#display-issues" id="id40"&gt;Display Issues&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#display-components-mismatch" id="id41"&gt;Display components mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#partial-look-support" id="id42"&gt;Partial Look support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#improving-the-substance-ocio-config" id="id43"&gt;Improving the Substance OCIO config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issues-recap" id="id44"&gt;Issues Recap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion" id="id45"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resources" id="id46"&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changelog" id="id47"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;section id="color-managed-workflow"&gt;
&lt;h2&gt;&lt;a href="#id2"&gt;Color-managed Workflow&lt;/a&gt;&lt;/h2&gt;
&lt;aside class="m-note m-info"&gt;
This part is aimed at beginners, but introduce a too vast topic for this
article. I recommend reading
&lt;a href="https://chrisbrejon.com/cg-cinematography/chapter-1-color-management#rgb-colorspace-and-its-components"&gt;Chris Brejon article’s section about colorspaces&lt;/a&gt; first, to be sure you understand
some of the technical vocabularies employed.&lt;/aside&gt;
&lt;p&gt;We can break the workflow into 4 sections : &lt;code&gt;Input&lt;/code&gt;, &lt;code&gt;Workspace&lt;/code&gt;,
&lt;code&gt;Display&lt;/code&gt; and &lt;code&gt;Output&lt;/code&gt;&lt;/p&gt;
&lt;div class="l-c-color l-mrg-l l-flex-c l-flex-center"&gt;
&lt;svg width="80%" height="80%" viewBox="0 0 630 153" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;"&gt;
    &lt;path d="M15,97L153,97C160.732,97 167,103.268 167,111L167,138C167,145.732 160.732,152 153,152L15,152C7.268,152 1,145.732 1,138L1,111C1,103.268 7.268,97 15,97ZM246,97L384,97C391.732,97 398,103.268 398,111L398,138C398,145.732 391.732,152 384,152L246,152C238.268,152 232,145.732 232,138L232,111C232,103.268 238.268,97 246,97ZM246,1L384,1C391.732,1 398,7.268 398,15L398,42C398,49.732 391.732,56 384,56L246,56C238.268,56 232,49.732 232,42L232,15C232,7.268 238.268,1 246,1ZM477,97L615,97C622.732,97 629,103.268 629,111L629,138C629,145.732 622.732,152 615,152L477,152C469.268,152 463,145.732 463,138L463,111C463,103.268 469.268,97 477,97Z" style="fill:none;fill-rule:nonzero;stroke:currentColor;stroke-width:2px;"/&gt;
    &lt;path d="M231.454,126.575C232.039,125.99 232.039,125.04 231.454,124.454L221.908,114.908C221.322,114.322 220.372,114.322 219.786,114.908C219.201,115.494 219.201,116.444 219.786,117.029L228.272,125.515L219.786,134C219.201,134.586 219.201,135.535 219.786,136.121C220.372,136.707 221.322,136.707 221.908,136.121L231.454,126.575ZM316.454,57.454C315.868,56.868 314.918,56.868 314.332,57.454L304.786,67C304.201,67.586 304.201,68.536 304.786,69.121C305.372,69.707 306.322,69.707 306.908,69.121L315.393,60.636L323.878,69.121C324.464,69.707 325.414,69.707 326,69.121C326.585,68.536 326.585,67.586 326,67L316.454,57.454ZM462.454,126.575C463.039,125.99 463.039,125.04 462.454,124.454L452.908,114.908C452.322,114.322 451.372,114.322 450.786,114.908C450.201,115.494 450.201,116.444 450.786,117.029L459.272,125.515L450.786,134C450.201,134.586 450.201,135.535 450.786,136.121C451.372,136.707 452.322,136.707 452.908,136.121L462.454,126.575ZM168.393,127.015L230.393,127.015L230.393,124.015L168.393,124.015L168.393,127.015ZM316.893,96.515L316.893,58.515L313.893,58.515L313.893,96.515L316.893,96.515ZM399.393,127.015L461.393,127.015L461.393,124.015L399.393,124.015L399.393,127.015Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;rect x="55.73" y="114.938" width="3.516" height="17.063" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M65.41,119.32L65.515,120.785C66.422,119.652 67.637,119.086 69.16,119.086C70.504,119.086 71.504,119.48 72.16,120.27C72.816,121.059 73.152,122.238 73.168,123.809L73.168,132L69.781,132L69.781,123.891C69.781,123.172 69.625,122.652 69.312,122.332C69,122.004 68.48,121.84 67.754,121.84C66.801,121.84 66.086,122.246 65.609,123.059L65.609,132L62.223,132L62.223,119.32L65.41,119.32Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M87.16,125.777C87.16,127.73 86.715,129.297 85.824,130.477C84.941,131.648 83.746,132.234 82.238,132.234C80.957,132.234 79.922,131.789 79.133,130.898L79.133,136.875L75.746,136.875L75.746,119.32L78.887,119.32L79.004,120.562C79.824,119.578 80.894,119.086 82.215,119.086C83.777,119.086 84.992,119.664 85.859,120.82C86.726,121.977 87.16,123.57 87.16,125.602L87.16,125.777ZM83.773,125.531C83.773,124.352 83.562,123.441 83.14,122.801C82.726,122.16 82.121,121.84 81.324,121.84C80.262,121.84 79.531,122.246 79.133,123.059L79.133,128.25C79.547,129.086 80.285,129.504 81.348,129.504C82.965,129.504 83.773,128.18 83.773,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M96.863,130.711C96.027,131.727 94.871,132.234 93.394,132.234C92.035,132.234 90.996,131.844 90.277,131.062C89.566,130.281 89.203,129.137 89.187,127.629L89.187,119.32L92.574,119.32L92.574,127.512C92.574,128.832 93.176,129.492 94.379,129.492C95.527,129.492 96.316,129.094 96.746,128.297L96.746,119.32L100.144,119.32L100.144,132L96.957,132L96.863,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M106.754,116.203L106.754,119.32L108.922,119.32L108.922,121.805L106.754,121.805L106.754,128.133C106.754,128.602 106.844,128.938 107.023,129.141C107.203,129.344 107.547,129.445 108.055,129.445C108.43,129.445 108.762,129.418 109.051,129.363L109.051,131.93C108.387,132.133 107.703,132.234 107,132.234C104.625,132.234 103.414,131.035 103.367,128.637L103.367,121.805L101.515,121.805L101.515,119.32L103.367,119.32L103.367,116.203L106.754,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M267.547,127.078L269.844,114.938L273.348,114.938L269.562,132L266.023,132L263.246,120.586L260.469,132L256.93,132L253.144,114.938L256.648,114.938L258.957,127.055L261.769,114.938L264.746,114.938L267.547,127.078Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M274.133,125.543C274.133,124.285 274.375,123.164 274.859,122.18C275.344,121.195 276.039,120.434 276.945,119.895C277.859,119.355 278.918,119.086 280.121,119.086C281.832,119.086 283.226,119.609 284.305,120.656C285.391,121.703 285.996,123.125 286.121,124.922L286.144,125.789C286.144,127.734 285.601,129.297 284.516,130.477C283.43,131.648 281.973,132.234 280.144,132.234C278.316,132.234 276.855,131.648 275.762,130.477C274.676,129.305 274.133,127.711 274.133,125.695L274.133,125.543ZM277.519,125.789C277.519,126.992 277.746,127.914 278.199,128.555C278.652,129.188 279.301,129.504 280.144,129.504C280.965,129.504 281.605,129.191 282.066,128.566C282.527,127.934 282.758,126.926 282.758,125.543C282.758,124.363 282.527,123.449 282.066,122.801C281.605,122.152 280.957,121.828 280.121,121.828C279.293,121.828 278.652,122.152 278.199,122.801C277.746,123.441 277.519,124.438 277.519,125.789Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M295.355,122.496C294.894,122.434 294.488,122.402 294.137,122.402C292.855,122.402 292.016,122.836 291.617,123.703L291.617,132L288.23,132L288.23,119.32L291.43,119.32L291.523,120.832C292.203,119.668 293.144,119.086 294.348,119.086C294.723,119.086 295.074,119.137 295.402,119.238L295.355,122.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M301.601,126.914L300.383,128.133L300.383,132L296.996,132L296.996,114L300.383,114L300.383,123.973L301.039,123.129L304.285,119.32L308.351,119.32L303.769,124.605L308.75,132L304.859,132L301.601,126.914Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M316.684,128.496C316.684,128.082 316.476,127.758 316.062,127.523C315.656,127.281 315,127.066 314.094,126.879C311.078,126.246 309.57,124.965 309.57,123.035C309.57,121.91 310.035,120.973 310.965,120.223C311.902,119.465 313.125,119.086 314.633,119.086C316.242,119.086 317.527,119.465 318.488,120.223C319.457,120.98 319.941,121.965 319.941,123.176L316.555,123.176C316.555,122.691 316.398,122.293 316.086,121.98C315.773,121.66 315.285,121.5 314.621,121.5C314.051,121.5 313.609,121.629 313.297,121.887C312.984,122.145 312.828,122.473 312.828,122.871C312.828,123.246 313.004,123.551 313.355,123.785C313.715,124.012 314.316,124.211 315.16,124.383C316.004,124.547 316.715,124.734 317.293,124.945C319.082,125.602 319.976,126.738 319.976,128.355C319.976,129.512 319.48,130.449 318.488,131.168C317.496,131.879 316.215,132.234 314.644,132.234C313.582,132.234 312.637,132.047 311.808,131.672C310.988,131.289 310.344,130.77 309.875,130.113C309.406,129.449 309.172,128.734 309.172,127.969L312.383,127.969C312.414,128.57 312.637,129.031 313.051,129.352C313.465,129.672 314.019,129.832 314.715,129.832C315.363,129.832 315.851,129.711 316.18,129.469C316.516,129.219 316.684,128.895 316.684,128.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M333.582,125.777C333.582,127.73 333.137,129.297 332.246,130.477C331.363,131.648 330.168,132.234 328.66,132.234C327.379,132.234 326.344,131.789 325.555,130.898L325.555,136.875L322.168,136.875L322.168,119.32L325.308,119.32L325.426,120.562C326.246,119.578 327.316,119.086 328.637,119.086C330.199,119.086 331.414,119.664 332.281,120.82C333.148,121.977 333.582,123.57 333.582,125.602L333.582,125.777ZM330.195,125.531C330.195,124.352 329.984,123.441 329.562,122.801C329.148,122.16 328.543,121.84 327.746,121.84C326.684,121.84 325.953,122.246 325.555,123.059L325.555,128.25C325.969,129.086 326.707,129.504 327.769,129.504C329.387,129.504 330.195,128.18 330.195,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M343.039,132C342.883,131.695 342.769,131.316 342.699,130.863C341.879,131.777 340.812,132.234 339.5,132.234C338.258,132.234 337.226,131.875 336.406,131.156C335.594,130.438 335.187,129.531 335.187,128.438C335.187,127.094 335.684,126.062 336.676,125.344C337.676,124.625 339.117,124.262 341,124.254L342.558,124.254L342.558,123.527C342.558,122.941 342.406,122.473 342.101,122.121C341.805,121.77 341.332,121.594 340.684,121.594C340.113,121.594 339.664,121.73 339.336,122.004C339.016,122.277 338.855,122.652 338.855,123.129L335.469,123.129C335.469,122.395 335.695,121.715 336.148,121.09C336.601,120.465 337.242,119.977 338.07,119.625C338.898,119.266 339.828,119.086 340.859,119.086C342.422,119.086 343.66,119.48 344.574,120.27C345.496,121.051 345.957,122.152 345.957,123.574L345.957,129.07C345.965,130.273 346.133,131.184 346.461,131.801L346.461,132L343.039,132ZM340.238,129.645C340.738,129.645 341.199,129.535 341.621,129.316C342.043,129.09 342.355,128.789 342.558,128.414L342.558,126.234L341.293,126.234C339.598,126.234 338.695,126.82 338.586,127.992L338.574,128.191C338.574,128.613 338.723,128.961 339.019,129.234C339.316,129.508 339.723,129.645 340.238,129.645Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M353.832,129.504C354.457,129.504 354.965,129.332 355.355,128.988C355.746,128.645 355.949,128.188 355.965,127.617L359.141,127.617C359.133,128.477 358.898,129.266 358.437,129.984C357.976,130.695 357.344,131.25 356.539,131.648C355.742,132.039 354.859,132.234 353.891,132.234C352.078,132.234 350.648,131.66 349.601,130.512C348.555,129.355 348.031,127.762 348.031,125.73L348.031,125.508C348.031,123.555 348.551,121.996 349.59,120.832C350.629,119.668 352.055,119.086 353.867,119.086C355.453,119.086 356.723,119.539 357.676,120.445C358.637,121.344 359.125,122.543 359.141,124.043L355.965,124.043C355.949,123.387 355.746,122.855 355.355,122.449C354.965,122.035 354.449,121.828 353.808,121.828C353.019,121.828 352.422,122.117 352.016,122.695C351.617,123.266 351.418,124.195 351.418,125.484L351.418,125.836C351.418,127.141 351.617,128.078 352.016,128.648C352.414,129.219 353.019,129.504 353.832,129.504Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M366.91,132.234C365.051,132.234 363.535,131.664 362.363,130.523C361.199,129.383 360.617,127.863 360.617,125.965L360.617,125.637C360.617,124.363 360.863,123.227 361.355,122.227C361.848,121.219 362.543,120.445 363.441,119.906C364.348,119.359 365.379,119.086 366.535,119.086C368.269,119.086 369.633,119.633 370.625,120.727C371.625,121.82 372.125,123.371 372.125,125.379L372.125,126.762L364.051,126.762C364.16,127.59 364.488,128.254 365.035,128.754C365.59,129.254 366.289,129.504 367.133,129.504C368.437,129.504 369.457,129.031 370.191,128.086L371.855,129.949C371.348,130.668 370.66,131.23 369.793,131.637C368.926,132.035 367.965,132.234 366.91,132.234ZM366.523,121.828C365.851,121.828 365.305,122.055 364.883,122.508C364.469,122.961 364.203,123.609 364.086,124.453L368.797,124.453L368.797,124.184C368.781,123.434 368.578,122.855 368.187,122.449C367.797,122.035 367.242,121.828 366.523,121.828Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M274.789,36L274.789,18.938L280.039,18.938C281.539,18.938 282.879,19.277 284.058,19.957C285.246,20.629 286.172,21.59 286.836,22.84C287.5,24.082 287.832,25.496 287.832,27.082L287.832,27.867C287.832,29.453 287.504,30.863 286.848,32.098C286.199,33.332 285.281,34.289 284.094,34.969C282.906,35.648 281.566,35.992 280.074,36L274.789,36ZM278.305,21.785L278.305,33.176L280.004,33.176C281.379,33.176 282.43,32.727 283.156,31.828C283.883,30.93 284.254,29.645 284.269,27.973L284.269,27.07C284.269,25.336 283.91,24.023 283.191,23.133C282.473,22.234 281.422,21.785 280.039,21.785L278.305,21.785Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M293.75,36L290.351,36L290.351,23.32L293.75,23.32L293.75,36ZM290.152,20.039C290.152,19.531 290.32,19.113 290.656,18.785C291,18.457 291.465,18.293 292.051,18.293C292.629,18.293 293.09,18.457 293.434,18.785C293.777,19.113 293.949,19.531 293.949,20.039C293.949,20.555 293.773,20.977 293.422,21.305C293.078,21.633 292.621,21.797 292.051,21.797C291.48,21.797 291.019,21.633 290.668,21.305C290.324,20.977 290.152,20.555 290.152,20.039Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M303.418,32.496C303.418,32.082 303.211,31.758 302.797,31.523C302.391,31.281 301.734,31.066 300.828,30.879C297.812,30.246 296.305,28.965 296.305,27.035C296.305,25.91 296.769,24.973 297.699,24.223C298.637,23.465 299.859,23.086 301.367,23.086C302.976,23.086 304.262,23.465 305.223,24.223C306.191,24.98 306.676,25.965 306.676,27.176L303.289,27.176C303.289,26.691 303.133,26.293 302.82,25.98C302.508,25.66 302.019,25.5 301.355,25.5C300.785,25.5 300.344,25.629 300.031,25.887C299.719,26.145 299.562,26.473 299.562,26.871C299.562,27.246 299.738,27.551 300.09,27.785C300.449,28.012 301.051,28.211 301.894,28.383C302.738,28.547 303.449,28.734 304.027,28.945C305.816,29.602 306.711,30.738 306.711,32.356C306.711,33.512 306.215,34.449 305.223,35.168C304.23,35.879 302.949,36.234 301.379,36.234C300.316,36.234 299.371,36.047 298.543,35.672C297.723,35.289 297.078,34.77 296.609,34.113C296.141,33.449 295.906,32.734 295.906,31.969L299.117,31.969C299.148,32.57 299.371,33.031 299.785,33.352C300.199,33.672 300.754,33.832 301.449,33.832C302.098,33.832 302.586,33.711 302.914,33.469C303.25,33.219 303.418,32.895 303.418,32.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M320.316,29.777C320.316,31.731 319.871,33.297 318.98,34.477C318.098,35.648 316.902,36.234 315.394,36.234C314.113,36.234 313.078,35.789 312.289,34.898L312.289,40.875L308.902,40.875L308.902,23.32L312.043,23.32L312.16,24.563C312.98,23.578 314.051,23.086 315.371,23.086C316.934,23.086 318.148,23.664 319.016,24.82C319.883,25.977 320.316,27.57 320.316,29.602L320.316,29.777ZM316.93,29.531C316.93,28.352 316.719,27.441 316.297,26.801C315.883,26.16 315.277,25.84 314.48,25.84C313.418,25.84 312.687,26.246 312.289,27.059L312.289,32.25C312.703,33.086 313.441,33.504 314.504,33.504C316.121,33.504 316.93,32.18 316.93,29.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;rect x="322.601" y="18" width="3.399" height="18" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M336.148,36C335.992,35.695 335.879,35.316 335.808,34.863C334.988,35.777 333.922,36.234 332.609,36.234C331.367,36.234 330.336,35.875 329.516,35.156C328.703,34.438 328.297,33.531 328.297,32.438C328.297,31.094 328.793,30.063 329.785,29.344C330.785,28.625 332.226,28.262 334.109,28.254L335.668,28.254L335.668,27.527C335.668,26.941 335.516,26.473 335.211,26.121C334.914,25.77 334.441,25.594 333.793,25.594C333.223,25.594 332.773,25.73 332.445,26.004C332.125,26.277 331.965,26.652 331.965,27.129L328.578,27.129C328.578,26.395 328.805,25.715 329.258,25.09C329.711,24.465 330.351,23.977 331.18,23.625C332.008,23.266 332.937,23.086 333.969,23.086C335.531,23.086 336.769,23.48 337.684,24.27C338.605,25.051 339.066,26.152 339.066,27.574L339.066,33.07C339.074,34.273 339.242,35.184 339.57,35.801L339.57,36L336.148,36ZM333.348,33.645C333.848,33.645 334.308,33.535 334.73,33.316C335.152,33.09 335.465,32.789 335.668,32.414L335.668,30.234L334.402,30.234C332.707,30.234 331.805,30.82 331.695,31.992L331.684,32.191C331.684,32.613 331.832,32.961 332.129,33.234C332.426,33.508 332.832,33.645 333.348,33.645Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M346.215,31.207L348.558,23.32L352.191,23.32L347.094,37.969L346.812,38.637C346.055,40.293 344.805,41.121 343.062,41.121C342.57,41.121 342.07,41.047 341.562,40.898L341.562,38.332L342.078,38.344C342.719,38.344 343.195,38.246 343.508,38.051C343.828,37.856 344.078,37.531 344.258,37.078L344.656,36.035L340.215,23.32L343.859,23.32L346.215,31.207Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M522.699,123.855C522.699,125.535 522.402,127.008 521.808,128.273C521.215,129.539 520.363,130.516 519.254,131.203C518.152,131.891 516.887,132.234 515.457,132.234C514.043,132.234 512.781,131.895 511.672,131.215C510.562,130.535 509.703,129.566 509.094,128.309C508.484,127.043 508.176,125.59 508.168,123.949L508.168,123.105C508.168,121.426 508.469,119.949 509.07,118.676C509.68,117.394 510.535,116.414 511.637,115.734C512.746,115.047 514.012,114.703 515.434,114.703C516.855,114.703 518.117,115.047 519.219,115.734C520.328,116.414 521.184,117.394 521.785,118.676C522.394,119.949 522.699,121.422 522.699,123.094L522.699,123.855ZM519.137,123.082C519.137,121.293 518.816,119.934 518.176,119.004C517.535,118.074 516.621,117.609 515.434,117.609C514.254,117.609 513.344,118.07 512.703,118.992C512.062,119.906 511.738,121.25 511.73,123.023L511.73,123.855C511.73,125.598 512.051,126.949 512.691,127.91C513.332,128.871 514.254,129.352 515.457,129.352C516.637,129.352 517.543,128.891 518.176,127.969C518.808,127.039 519.129,125.688 519.137,123.914L519.137,123.082Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M532.625,130.711C531.789,131.727 530.633,132.234 529.156,132.234C527.797,132.234 526.758,131.844 526.039,131.062C525.328,130.281 524.965,129.137 524.949,127.629L524.949,119.32L528.336,119.32L528.336,127.512C528.336,128.832 528.937,129.492 530.141,129.492C531.289,129.492 532.078,129.094 532.508,128.297L532.508,119.32L535.906,119.32L535.906,132L532.719,132L532.625,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M542.516,116.203L542.516,119.32L544.684,119.32L544.684,121.805L542.516,121.805L542.516,128.133C542.516,128.602 542.605,128.938 542.785,129.141C542.965,129.344 543.308,129.445 543.816,129.445C544.191,129.445 544.523,129.418 544.812,129.363L544.812,131.93C544.148,132.133 543.465,132.234 542.762,132.234C540.387,132.234 539.176,131.035 539.129,128.637L539.129,121.805L537.277,121.805L537.277,119.32L539.129,119.32L539.129,116.203L542.516,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M557.984,125.777C557.984,127.73 557.539,129.297 556.648,130.477C555.766,131.648 554.57,132.234 553.062,132.234C551.781,132.234 550.746,131.789 549.957,130.898L549.957,136.875L546.57,136.875L546.57,119.32L549.711,119.32L549.828,120.562C550.648,119.578 551.719,119.086 553.039,119.086C554.601,119.086 555.816,119.664 556.684,120.82C557.551,121.977 557.984,123.57 557.984,125.602L557.984,125.777ZM554.598,125.531C554.598,124.352 554.387,123.441 553.965,122.801C553.551,122.16 552.945,121.84 552.148,121.84C551.086,121.84 550.355,122.246 549.957,123.059L549.957,128.25C550.371,129.086 551.109,129.504 552.172,129.504C553.789,129.504 554.598,128.18 554.598,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M567.687,130.711C566.851,131.727 565.695,132.234 564.219,132.234C562.859,132.234 561.82,131.844 561.101,131.062C560.391,130.281 560.027,129.137 560.012,127.629L560.012,119.32L563.398,119.32L563.398,127.512C563.398,128.832 564,129.492 565.203,129.492C566.351,129.492 567.141,129.094 567.57,128.297L567.57,119.32L570.969,119.32L570.969,132L567.781,132L567.687,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M577.578,116.203L577.578,119.32L579.746,119.32L579.746,121.805L577.578,121.805L577.578,128.133C577.578,128.602 577.668,128.938 577.848,129.141C578.027,129.344 578.371,129.445 578.879,129.445C579.254,129.445 579.586,129.418 579.875,129.363L579.875,131.93C579.211,132.133 578.527,132.234 577.824,132.234C575.449,132.234 574.238,131.035 574.191,128.637L574.191,121.805L572.34,121.805L572.34,119.32L574.191,119.32L574.191,116.203L577.578,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;p&gt;You transfer &lt;code&gt;data&lt;/code&gt; between each of these section. Data that must be
potentially decoded and then encoded, depending on what the section required.
In Substance Painter this &lt;code&gt;data&lt;/code&gt; is most of the time pixels, encoded
using the RGB color model.&lt;/p&gt;
&lt;p&gt;All of these data-transfers allow me to introduce the most important rule:
&lt;span class="m-text m-primary"&gt;you always need to know where you start to know where you are
going&lt;/span&gt;.
As an example, in the above diagram, to convert the &lt;code&gt;Input&lt;/code&gt; data to the
&lt;code&gt;Workspace&lt;/code&gt; data, we need to know how the &lt;code&gt;Input&lt;/code&gt; data is encoded (in our
case, which colorspace).&lt;/p&gt;
&lt;section id="data-types-color-and-scalar"&gt;
&lt;h3&gt;&lt;a href="#id3"&gt;Data types: Color and Scalar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;“Where you start” means first, what type of data are you manipulating ?&lt;/p&gt;
&lt;p&gt;There are only two types : &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;scalar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It is important to know which one your data belongs to because the scalar
one doesn’t require your data to be color-managed and as such skip a
complex part.&lt;/p&gt;
&lt;section id="scalar"&gt;
&lt;h4&gt;&lt;a href="#id4"&gt;Scalar&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Scalar data has no means to be displayed directly, the data store numbers
that can be used to drive other types of data. We are only interested in the
original value of these numbers and as such this kind of data &lt;strong&gt;must never
be altered by color-transformations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To get to more concrete examples scalar data include but is not limited to:
roughness, normals, masks, displacement, vectors, …&lt;/p&gt;
&lt;aside class="m-note m-warning"&gt;
This is not because the data, when displayed, is not grayscale, that it
is color data. For example normal maps, even if colored, ARE scalar data.&lt;/aside&gt;
&lt;/section&gt;
&lt;section id="color"&gt;
&lt;h4&gt;&lt;a href="#id5"&gt;Color&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Everything that is not scalar. Values stored are intended to be displayed
directly. These values are always encoded in some colorspace and require to be
decoded properly.&lt;/p&gt;
&lt;p&gt;This include but is not limited to : diffuse/albedo/base-color, subsurface
color, specular color, refraction color, every image displayed on the web, …&lt;/p&gt;
&lt;/section&gt;
&lt;section id="in-substance"&gt;
&lt;h4&gt;&lt;a href="#id6"&gt;In Substance&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In Substance you will find this separation depending on the channel you
are working on. &lt;a href="https://substance3d.adobe.com/documentation/spdoc/color-management-223053233.html#section5"&gt;The full list of color-managed channels is available here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As Substance is aware if the channel needs to be color-managed, some operations
will be adjusted/skipped. An application of this is the &lt;code&gt;view transform&lt;/code&gt;
that will be disabled when viewing a scalar channel.&lt;/p&gt;
&lt;p&gt;This notion will be also applied by yourself when needed to specify the
colorspace encoding of a resource (images, alphas, materials, …).
If you import a roughness texture, as it is scalar data you will have to
specify the “colorspace” as “raw”, so no special decoding is applied.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="workflow-sections"&gt;
&lt;h3&gt;&lt;a href="#id7"&gt;Workflow Sections&lt;/a&gt;&lt;/h3&gt;
&lt;div class="l-c-color l-mrg-l l-flex-c l-flex-center"&gt;
&lt;svg width="80%" height="80%" viewBox="0 0 630 153" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;"&gt;
    &lt;path d="M15,97L153,97C160.732,97 167,103.268 167,111L167,138C167,145.732 160.732,152 153,152L15,152C7.268,152 1,145.732 1,138L1,111C1,103.268 7.268,97 15,97ZM246,97L384,97C391.732,97 398,103.268 398,111L398,138C398,145.732 391.732,152 384,152L246,152C238.268,152 232,145.732 232,138L232,111C232,103.268 238.268,97 246,97ZM246,1L384,1C391.732,1 398,7.268 398,15L398,42C398,49.732 391.732,56 384,56L246,56C238.268,56 232,49.732 232,42L232,15C232,7.268 238.268,1 246,1ZM477,97L615,97C622.732,97 629,103.268 629,111L629,138C629,145.732 622.732,152 615,152L477,152C469.268,152 463,145.732 463,138L463,111C463,103.268 469.268,97 477,97Z" style="fill:none;fill-rule:nonzero;stroke:currentColor;stroke-width:2px;"/&gt;
    &lt;path d="M231.454,126.575C232.039,125.99 232.039,125.04 231.454,124.454L221.908,114.908C221.322,114.322 220.372,114.322 219.786,114.908C219.201,115.494 219.201,116.444 219.786,117.029L228.272,125.515L219.786,134C219.201,134.586 219.201,135.535 219.786,136.121C220.372,136.707 221.322,136.707 221.908,136.121L231.454,126.575ZM316.454,57.454C315.868,56.868 314.918,56.868 314.332,57.454L304.786,67C304.201,67.586 304.201,68.536 304.786,69.121C305.372,69.707 306.322,69.707 306.908,69.121L315.393,60.636L323.878,69.121C324.464,69.707 325.414,69.707 326,69.121C326.585,68.536 326.585,67.586 326,67L316.454,57.454ZM462.454,126.575C463.039,125.99 463.039,125.04 462.454,124.454L452.908,114.908C452.322,114.322 451.372,114.322 450.786,114.908C450.201,115.494 450.201,116.444 450.786,117.029L459.272,125.515L450.786,134C450.201,134.586 450.201,135.535 450.786,136.121C451.372,136.707 452.322,136.707 452.908,136.121L462.454,126.575ZM168.393,127.015L230.393,127.015L230.393,124.015L168.393,124.015L168.393,127.015ZM316.893,96.515L316.893,58.515L313.893,58.515L313.893,96.515L316.893,96.515ZM399.393,127.015L461.393,127.015L461.393,124.015L399.393,124.015L399.393,127.015Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;rect x="55.73" y="114.938" width="3.516" height="17.063" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M65.41,119.32L65.515,120.785C66.422,119.652 67.637,119.086 69.16,119.086C70.504,119.086 71.504,119.48 72.16,120.27C72.816,121.059 73.152,122.238 73.168,123.809L73.168,132L69.781,132L69.781,123.891C69.781,123.172 69.625,122.652 69.312,122.332C69,122.004 68.48,121.84 67.754,121.84C66.801,121.84 66.086,122.246 65.609,123.059L65.609,132L62.223,132L62.223,119.32L65.41,119.32Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M87.16,125.777C87.16,127.73 86.715,129.297 85.824,130.477C84.941,131.648 83.746,132.234 82.238,132.234C80.957,132.234 79.922,131.789 79.133,130.898L79.133,136.875L75.746,136.875L75.746,119.32L78.887,119.32L79.004,120.562C79.824,119.578 80.894,119.086 82.215,119.086C83.777,119.086 84.992,119.664 85.859,120.82C86.726,121.977 87.16,123.57 87.16,125.602L87.16,125.777ZM83.773,125.531C83.773,124.352 83.562,123.441 83.14,122.801C82.726,122.16 82.121,121.84 81.324,121.84C80.262,121.84 79.531,122.246 79.133,123.059L79.133,128.25C79.547,129.086 80.285,129.504 81.348,129.504C82.965,129.504 83.773,128.18 83.773,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M96.863,130.711C96.027,131.727 94.871,132.234 93.394,132.234C92.035,132.234 90.996,131.844 90.277,131.062C89.566,130.281 89.203,129.137 89.187,127.629L89.187,119.32L92.574,119.32L92.574,127.512C92.574,128.832 93.176,129.492 94.379,129.492C95.527,129.492 96.316,129.094 96.746,128.297L96.746,119.32L100.144,119.32L100.144,132L96.957,132L96.863,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M106.754,116.203L106.754,119.32L108.922,119.32L108.922,121.805L106.754,121.805L106.754,128.133C106.754,128.602 106.844,128.938 107.023,129.141C107.203,129.344 107.547,129.445 108.055,129.445C108.43,129.445 108.762,129.418 109.051,129.363L109.051,131.93C108.387,132.133 107.703,132.234 107,132.234C104.625,132.234 103.414,131.035 103.367,128.637L103.367,121.805L101.515,121.805L101.515,119.32L103.367,119.32L103.367,116.203L106.754,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M267.547,127.078L269.844,114.938L273.348,114.938L269.562,132L266.023,132L263.246,120.586L260.469,132L256.93,132L253.144,114.938L256.648,114.938L258.957,127.055L261.769,114.938L264.746,114.938L267.547,127.078Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M274.133,125.543C274.133,124.285 274.375,123.164 274.859,122.18C275.344,121.195 276.039,120.434 276.945,119.895C277.859,119.355 278.918,119.086 280.121,119.086C281.832,119.086 283.226,119.609 284.305,120.656C285.391,121.703 285.996,123.125 286.121,124.922L286.144,125.789C286.144,127.734 285.601,129.297 284.516,130.477C283.43,131.648 281.973,132.234 280.144,132.234C278.316,132.234 276.855,131.648 275.762,130.477C274.676,129.305 274.133,127.711 274.133,125.695L274.133,125.543ZM277.519,125.789C277.519,126.992 277.746,127.914 278.199,128.555C278.652,129.188 279.301,129.504 280.144,129.504C280.965,129.504 281.605,129.191 282.066,128.566C282.527,127.934 282.758,126.926 282.758,125.543C282.758,124.363 282.527,123.449 282.066,122.801C281.605,122.152 280.957,121.828 280.121,121.828C279.293,121.828 278.652,122.152 278.199,122.801C277.746,123.441 277.519,124.438 277.519,125.789Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M295.355,122.496C294.894,122.434 294.488,122.402 294.137,122.402C292.855,122.402 292.016,122.836 291.617,123.703L291.617,132L288.23,132L288.23,119.32L291.43,119.32L291.523,120.832C292.203,119.668 293.144,119.086 294.348,119.086C294.723,119.086 295.074,119.137 295.402,119.238L295.355,122.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M301.601,126.914L300.383,128.133L300.383,132L296.996,132L296.996,114L300.383,114L300.383,123.973L301.039,123.129L304.285,119.32L308.351,119.32L303.769,124.605L308.75,132L304.859,132L301.601,126.914Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M316.684,128.496C316.684,128.082 316.476,127.758 316.062,127.523C315.656,127.281 315,127.066 314.094,126.879C311.078,126.246 309.57,124.965 309.57,123.035C309.57,121.91 310.035,120.973 310.965,120.223C311.902,119.465 313.125,119.086 314.633,119.086C316.242,119.086 317.527,119.465 318.488,120.223C319.457,120.98 319.941,121.965 319.941,123.176L316.555,123.176C316.555,122.691 316.398,122.293 316.086,121.98C315.773,121.66 315.285,121.5 314.621,121.5C314.051,121.5 313.609,121.629 313.297,121.887C312.984,122.145 312.828,122.473 312.828,122.871C312.828,123.246 313.004,123.551 313.355,123.785C313.715,124.012 314.316,124.211 315.16,124.383C316.004,124.547 316.715,124.734 317.293,124.945C319.082,125.602 319.976,126.738 319.976,128.355C319.976,129.512 319.48,130.449 318.488,131.168C317.496,131.879 316.215,132.234 314.644,132.234C313.582,132.234 312.637,132.047 311.808,131.672C310.988,131.289 310.344,130.77 309.875,130.113C309.406,129.449 309.172,128.734 309.172,127.969L312.383,127.969C312.414,128.57 312.637,129.031 313.051,129.352C313.465,129.672 314.019,129.832 314.715,129.832C315.363,129.832 315.851,129.711 316.18,129.469C316.516,129.219 316.684,128.895 316.684,128.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M333.582,125.777C333.582,127.73 333.137,129.297 332.246,130.477C331.363,131.648 330.168,132.234 328.66,132.234C327.379,132.234 326.344,131.789 325.555,130.898L325.555,136.875L322.168,136.875L322.168,119.32L325.308,119.32L325.426,120.562C326.246,119.578 327.316,119.086 328.637,119.086C330.199,119.086 331.414,119.664 332.281,120.82C333.148,121.977 333.582,123.57 333.582,125.602L333.582,125.777ZM330.195,125.531C330.195,124.352 329.984,123.441 329.562,122.801C329.148,122.16 328.543,121.84 327.746,121.84C326.684,121.84 325.953,122.246 325.555,123.059L325.555,128.25C325.969,129.086 326.707,129.504 327.769,129.504C329.387,129.504 330.195,128.18 330.195,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M343.039,132C342.883,131.695 342.769,131.316 342.699,130.863C341.879,131.777 340.812,132.234 339.5,132.234C338.258,132.234 337.226,131.875 336.406,131.156C335.594,130.438 335.187,129.531 335.187,128.438C335.187,127.094 335.684,126.062 336.676,125.344C337.676,124.625 339.117,124.262 341,124.254L342.558,124.254L342.558,123.527C342.558,122.941 342.406,122.473 342.101,122.121C341.805,121.77 341.332,121.594 340.684,121.594C340.113,121.594 339.664,121.73 339.336,122.004C339.016,122.277 338.855,122.652 338.855,123.129L335.469,123.129C335.469,122.395 335.695,121.715 336.148,121.09C336.601,120.465 337.242,119.977 338.07,119.625C338.898,119.266 339.828,119.086 340.859,119.086C342.422,119.086 343.66,119.48 344.574,120.27C345.496,121.051 345.957,122.152 345.957,123.574L345.957,129.07C345.965,130.273 346.133,131.184 346.461,131.801L346.461,132L343.039,132ZM340.238,129.645C340.738,129.645 341.199,129.535 341.621,129.316C342.043,129.09 342.355,128.789 342.558,128.414L342.558,126.234L341.293,126.234C339.598,126.234 338.695,126.82 338.586,127.992L338.574,128.191C338.574,128.613 338.723,128.961 339.019,129.234C339.316,129.508 339.723,129.645 340.238,129.645Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M353.832,129.504C354.457,129.504 354.965,129.332 355.355,128.988C355.746,128.645 355.949,128.188 355.965,127.617L359.141,127.617C359.133,128.477 358.898,129.266 358.437,129.984C357.976,130.695 357.344,131.25 356.539,131.648C355.742,132.039 354.859,132.234 353.891,132.234C352.078,132.234 350.648,131.66 349.601,130.512C348.555,129.355 348.031,127.762 348.031,125.73L348.031,125.508C348.031,123.555 348.551,121.996 349.59,120.832C350.629,119.668 352.055,119.086 353.867,119.086C355.453,119.086 356.723,119.539 357.676,120.445C358.637,121.344 359.125,122.543 359.141,124.043L355.965,124.043C355.949,123.387 355.746,122.855 355.355,122.449C354.965,122.035 354.449,121.828 353.808,121.828C353.019,121.828 352.422,122.117 352.016,122.695C351.617,123.266 351.418,124.195 351.418,125.484L351.418,125.836C351.418,127.141 351.617,128.078 352.016,128.648C352.414,129.219 353.019,129.504 353.832,129.504Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M366.91,132.234C365.051,132.234 363.535,131.664 362.363,130.523C361.199,129.383 360.617,127.863 360.617,125.965L360.617,125.637C360.617,124.363 360.863,123.227 361.355,122.227C361.848,121.219 362.543,120.445 363.441,119.906C364.348,119.359 365.379,119.086 366.535,119.086C368.269,119.086 369.633,119.633 370.625,120.727C371.625,121.82 372.125,123.371 372.125,125.379L372.125,126.762L364.051,126.762C364.16,127.59 364.488,128.254 365.035,128.754C365.59,129.254 366.289,129.504 367.133,129.504C368.437,129.504 369.457,129.031 370.191,128.086L371.855,129.949C371.348,130.668 370.66,131.23 369.793,131.637C368.926,132.035 367.965,132.234 366.91,132.234ZM366.523,121.828C365.851,121.828 365.305,122.055 364.883,122.508C364.469,122.961 364.203,123.609 364.086,124.453L368.797,124.453L368.797,124.184C368.781,123.434 368.578,122.855 368.187,122.449C367.797,122.035 367.242,121.828 366.523,121.828Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M274.789,36L274.789,18.938L280.039,18.938C281.539,18.938 282.879,19.277 284.058,19.957C285.246,20.629 286.172,21.59 286.836,22.84C287.5,24.082 287.832,25.496 287.832,27.082L287.832,27.867C287.832,29.453 287.504,30.863 286.848,32.098C286.199,33.332 285.281,34.289 284.094,34.969C282.906,35.648 281.566,35.992 280.074,36L274.789,36ZM278.305,21.785L278.305,33.176L280.004,33.176C281.379,33.176 282.43,32.727 283.156,31.828C283.883,30.93 284.254,29.645 284.269,27.973L284.269,27.07C284.269,25.336 283.91,24.023 283.191,23.133C282.473,22.234 281.422,21.785 280.039,21.785L278.305,21.785Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M293.75,36L290.351,36L290.351,23.32L293.75,23.32L293.75,36ZM290.152,20.039C290.152,19.531 290.32,19.113 290.656,18.785C291,18.457 291.465,18.293 292.051,18.293C292.629,18.293 293.09,18.457 293.434,18.785C293.777,19.113 293.949,19.531 293.949,20.039C293.949,20.555 293.773,20.977 293.422,21.305C293.078,21.633 292.621,21.797 292.051,21.797C291.48,21.797 291.019,21.633 290.668,21.305C290.324,20.977 290.152,20.555 290.152,20.039Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M303.418,32.496C303.418,32.082 303.211,31.758 302.797,31.523C302.391,31.281 301.734,31.066 300.828,30.879C297.812,30.246 296.305,28.965 296.305,27.035C296.305,25.91 296.769,24.973 297.699,24.223C298.637,23.465 299.859,23.086 301.367,23.086C302.976,23.086 304.262,23.465 305.223,24.223C306.191,24.98 306.676,25.965 306.676,27.176L303.289,27.176C303.289,26.691 303.133,26.293 302.82,25.98C302.508,25.66 302.019,25.5 301.355,25.5C300.785,25.5 300.344,25.629 300.031,25.887C299.719,26.145 299.562,26.473 299.562,26.871C299.562,27.246 299.738,27.551 300.09,27.785C300.449,28.012 301.051,28.211 301.894,28.383C302.738,28.547 303.449,28.734 304.027,28.945C305.816,29.602 306.711,30.738 306.711,32.356C306.711,33.512 306.215,34.449 305.223,35.168C304.23,35.879 302.949,36.234 301.379,36.234C300.316,36.234 299.371,36.047 298.543,35.672C297.723,35.289 297.078,34.77 296.609,34.113C296.141,33.449 295.906,32.734 295.906,31.969L299.117,31.969C299.148,32.57 299.371,33.031 299.785,33.352C300.199,33.672 300.754,33.832 301.449,33.832C302.098,33.832 302.586,33.711 302.914,33.469C303.25,33.219 303.418,32.895 303.418,32.496Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M320.316,29.777C320.316,31.731 319.871,33.297 318.98,34.477C318.098,35.648 316.902,36.234 315.394,36.234C314.113,36.234 313.078,35.789 312.289,34.898L312.289,40.875L308.902,40.875L308.902,23.32L312.043,23.32L312.16,24.563C312.98,23.578 314.051,23.086 315.371,23.086C316.934,23.086 318.148,23.664 319.016,24.82C319.883,25.977 320.316,27.57 320.316,29.602L320.316,29.777ZM316.93,29.531C316.93,28.352 316.719,27.441 316.297,26.801C315.883,26.16 315.277,25.84 314.48,25.84C313.418,25.84 312.687,26.246 312.289,27.059L312.289,32.25C312.703,33.086 313.441,33.504 314.504,33.504C316.121,33.504 316.93,32.18 316.93,29.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;rect x="322.601" y="18" width="3.399" height="18" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M336.148,36C335.992,35.695 335.879,35.316 335.808,34.863C334.988,35.777 333.922,36.234 332.609,36.234C331.367,36.234 330.336,35.875 329.516,35.156C328.703,34.438 328.297,33.531 328.297,32.438C328.297,31.094 328.793,30.063 329.785,29.344C330.785,28.625 332.226,28.262 334.109,28.254L335.668,28.254L335.668,27.527C335.668,26.941 335.516,26.473 335.211,26.121C334.914,25.77 334.441,25.594 333.793,25.594C333.223,25.594 332.773,25.73 332.445,26.004C332.125,26.277 331.965,26.652 331.965,27.129L328.578,27.129C328.578,26.395 328.805,25.715 329.258,25.09C329.711,24.465 330.351,23.977 331.18,23.625C332.008,23.266 332.937,23.086 333.969,23.086C335.531,23.086 336.769,23.48 337.684,24.27C338.605,25.051 339.066,26.152 339.066,27.574L339.066,33.07C339.074,34.273 339.242,35.184 339.57,35.801L339.57,36L336.148,36ZM333.348,33.645C333.848,33.645 334.308,33.535 334.73,33.316C335.152,33.09 335.465,32.789 335.668,32.414L335.668,30.234L334.402,30.234C332.707,30.234 331.805,30.82 331.695,31.992L331.684,32.191C331.684,32.613 331.832,32.961 332.129,33.234C332.426,33.508 332.832,33.645 333.348,33.645Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M346.215,31.207L348.558,23.32L352.191,23.32L347.094,37.969L346.812,38.637C346.055,40.293 344.805,41.121 343.062,41.121C342.57,41.121 342.07,41.047 341.562,40.898L341.562,38.332L342.078,38.344C342.719,38.344 343.195,38.246 343.508,38.051C343.828,37.856 344.078,37.531 344.258,37.078L344.656,36.035L340.215,23.32L343.859,23.32L346.215,31.207Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M522.699,123.855C522.699,125.535 522.402,127.008 521.808,128.273C521.215,129.539 520.363,130.516 519.254,131.203C518.152,131.891 516.887,132.234 515.457,132.234C514.043,132.234 512.781,131.895 511.672,131.215C510.562,130.535 509.703,129.566 509.094,128.309C508.484,127.043 508.176,125.59 508.168,123.949L508.168,123.105C508.168,121.426 508.469,119.949 509.07,118.676C509.68,117.394 510.535,116.414 511.637,115.734C512.746,115.047 514.012,114.703 515.434,114.703C516.855,114.703 518.117,115.047 519.219,115.734C520.328,116.414 521.184,117.394 521.785,118.676C522.394,119.949 522.699,121.422 522.699,123.094L522.699,123.855ZM519.137,123.082C519.137,121.293 518.816,119.934 518.176,119.004C517.535,118.074 516.621,117.609 515.434,117.609C514.254,117.609 513.344,118.07 512.703,118.992C512.062,119.906 511.738,121.25 511.73,123.023L511.73,123.855C511.73,125.598 512.051,126.949 512.691,127.91C513.332,128.871 514.254,129.352 515.457,129.352C516.637,129.352 517.543,128.891 518.176,127.969C518.808,127.039 519.129,125.688 519.137,123.914L519.137,123.082Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M532.625,130.711C531.789,131.727 530.633,132.234 529.156,132.234C527.797,132.234 526.758,131.844 526.039,131.062C525.328,130.281 524.965,129.137 524.949,127.629L524.949,119.32L528.336,119.32L528.336,127.512C528.336,128.832 528.937,129.492 530.141,129.492C531.289,129.492 532.078,129.094 532.508,128.297L532.508,119.32L535.906,119.32L535.906,132L532.719,132L532.625,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M542.516,116.203L542.516,119.32L544.684,119.32L544.684,121.805L542.516,121.805L542.516,128.133C542.516,128.602 542.605,128.938 542.785,129.141C542.965,129.344 543.308,129.445 543.816,129.445C544.191,129.445 544.523,129.418 544.812,129.363L544.812,131.93C544.148,132.133 543.465,132.234 542.762,132.234C540.387,132.234 539.176,131.035 539.129,128.637L539.129,121.805L537.277,121.805L537.277,119.32L539.129,119.32L539.129,116.203L542.516,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M557.984,125.777C557.984,127.73 557.539,129.297 556.648,130.477C555.766,131.648 554.57,132.234 553.062,132.234C551.781,132.234 550.746,131.789 549.957,130.898L549.957,136.875L546.57,136.875L546.57,119.32L549.711,119.32L549.828,120.562C550.648,119.578 551.719,119.086 553.039,119.086C554.601,119.086 555.816,119.664 556.684,120.82C557.551,121.977 557.984,123.57 557.984,125.602L557.984,125.777ZM554.598,125.531C554.598,124.352 554.387,123.441 553.965,122.801C553.551,122.16 552.945,121.84 552.148,121.84C551.086,121.84 550.355,122.246 549.957,123.059L549.957,128.25C550.371,129.086 551.109,129.504 552.172,129.504C553.789,129.504 554.598,128.18 554.598,125.531Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M567.687,130.711C566.851,131.727 565.695,132.234 564.219,132.234C562.859,132.234 561.82,131.844 561.101,131.062C560.391,130.281 560.027,129.137 560.012,127.629L560.012,119.32L563.398,119.32L563.398,127.512C563.398,128.832 564,129.492 565.203,129.492C566.351,129.492 567.141,129.094 567.57,128.297L567.57,119.32L570.969,119.32L570.969,132L567.781,132L567.687,130.711Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
    &lt;path d="M577.578,116.203L577.578,119.32L579.746,119.32L579.746,121.805L577.578,121.805L577.578,128.133C577.578,128.602 577.668,128.938 577.848,129.141C578.027,129.344 578.371,129.445 578.879,129.445C579.254,129.445 579.586,129.418 579.875,129.363L579.875,131.93C579.211,132.133 578.527,132.234 577.824,132.234C575.449,132.234 574.238,131.035 574.191,128.637L574.191,121.805L572.34,121.805L572.34,119.32L574.191,119.32L574.191,116.203L577.578,116.203Z" style="fill:currentColor;fill-rule:nonzero;"/&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;section id="input"&gt;
&lt;h4&gt;&lt;a href="#id8"&gt;Input&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Data that need to be processed, can be anything but in our case it is
pixel data, like an image texture, a brushstroke, a procedural noise, …&lt;/p&gt;
&lt;p&gt;If it is scalar, we don’t need to decode it. We must specify that we don’t
want color-transformations by specifying for example the colorspace=”raw”.&lt;/p&gt;
&lt;p&gt;If it is color this means that &lt;strong&gt;the data has been mandatorily encoded in a given
colorspace&lt;/strong&gt;. You can hope that this encoding is specified somewhere, like in
the name, in the metadata, … But as color-management is a big mess still in
2021 most of the time we will assume that it’s in sRGB colorspace with
a transfer-function depending on the file format used.&lt;/p&gt;
&lt;p&gt;In sp the Input section can be found on the image slot of each layer.
See &lt;a href="#input-setup-in-sp"&gt;Input Setup in Sp&lt;/a&gt; ..&lt;/p&gt;
&lt;/section&gt;
&lt;section id="workspace"&gt;
&lt;h4&gt;&lt;a href="#id9"&gt;Workspace&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Everything you create, modify go through it. We define how it is configured
so we can always know “where to go” when transforming an Input.
In sp this is the “Working color space”. In OCIO term it corresponds the
&lt;code&gt;scene_linear&lt;/code&gt; role (also the &lt;code&gt;reference&lt;/code&gt; one).&lt;/p&gt;
&lt;p&gt;Even though sp doesn’t support OCIO role, it read the
&lt;code&gt;scene_linear&lt;/code&gt; one to use it as the Working Colorspace.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="display"&gt;
&lt;h4&gt;&lt;a href="#id10"&gt;Display&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once the data has been processed through the Workspace you might want to
preview it. To do so, everybody will be using some kind of hardware display,
usually a computer monitor. This might sound dumb but it is a critical step.
So here we need to convert the Workspace data to Display data, and there is a
lot to do here.&lt;/p&gt;
&lt;p&gt;We can see the Workspace as an “open-domain”, where data can
be stored in some fancy colorspaces, reach some very high values, … (it
can also be closed with data being already closer to the Display domain).
We can then see the Display as a “closed-domain”, it except a kind of
particularly encoded signal and has limits clearly defined. Knowing the
source (Workspace) we can define the transformations required to convert it
to the target (Display). This involved at his core, colorspace primaries
conversion (if Workspace colorspace is different from the Display ones),
transfer-function encoding/re-encoding (to convert a linear Workspace to
a Display requiring the sRGB transfer-function), and at a more advanced stage,
a dynamic-range conversion (still if required). This last step is usually
called “tonemapping” where we try to make the open-domain that is the Workspace
fit into the Display closed-domain.&lt;/p&gt;
&lt;p&gt;Damn that’s a complicated one, but anyway, what you have to keep in mind is
we are encoding data for a delimited domain defined by the display you are
using.&lt;/p&gt;
&lt;p&gt;In sp the Display section is handled by the &lt;code&gt;view-transform&lt;/code&gt; dropdown, that
you can find at the top-right of your viewport.
See &lt;a href="#display-setup-in-sp"&gt;Display Setup in Sp&lt;/a&gt; .&lt;/p&gt;
&lt;/section&gt;
&lt;section id="output"&gt;
&lt;h4&gt;&lt;a href="#id11"&gt;Output&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;But isn’t the Display the Output ? Yes, it can be, if you are at the end of the
chain. But here in sp, the end of the chain is our exported texture files. The
Display only allow us to have a preview of how they could look.&lt;/p&gt;
&lt;p&gt;So here, we will encode the Workspace data, has it is required for the next
pipeline step. Encoding will depend on what you need in the next step and what
container (image format) you chose.&lt;/p&gt;
&lt;p&gt;In sp the Output section happens during the textures export process.
See &lt;a href="#output-setup-in-sp"&gt;Output Setup in Sp&lt;/a&gt; .&lt;/p&gt;
&lt;/section&gt;
&lt;section id="example"&gt;
&lt;h4&gt;&lt;a href="#id12"&gt;Example&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To illustrate the theory here is a diagram representing a section of a
potential VFX-pipeline. I hope this will not confuse you more than this topic
already is.&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/diagramB.jpg"&gt;&lt;img alt="Color-managed pipeline example diagram" src="https://mrlixm.github.io/static/images/blog/0008/diagramB.jpg" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Example of a color-managed pipeline with various colorspace configuration
used for each section.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;I voluntary chose different colorspace across departments and sections to
accentuate potential transformations.&lt;/li&gt;
&lt;li&gt;It has been chose to work with ACES for the color-management.&lt;/li&gt;
&lt;li&gt;Let’s assume all the users working on this pipeline have access to the
same display which is a DCI-P3 calibrated monitor.&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class="m-block m-danger"&gt;
&lt;h3&gt;Substance Painter&lt;/h3&gt;
&lt;p&gt;If we look at the Substance Painter department, we can see that our workspace
is &lt;code&gt;linear - sRGB&lt;/code&gt;. The artist decided to not bother working with &lt;code&gt;ACEScg&lt;/code&gt;
colorspace but instead is using &lt;code&gt;sRGB&lt;/code&gt; primaries.
This means that for the Display, the chain of color-transformation is the
following :&lt;/p&gt;
&lt;pre&gt;linear - sRGB &amp;gt; linear - ACES 2065-1 + ACES RRT &amp;gt; 2.6 gamma - DCI-P3&lt;/pre&gt;
&lt;div class="m-row"&gt;
&lt;div class="m-container-inflate m-col-l-4 m-left-l"&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-odt-p3.png"&gt;&lt;img alt="sp view-transform set to ACES - P3-D60" src="https://mrlixm.github.io/static/images/blog/0008/sp-odt-p3.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Located at the top-right of the viewport&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;div class="m-col-l-8"&gt;
And all of these transformation are magically handled by the OCIO
config, the artist only specify what display is he using by
modifying the view-transform colorspace.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We finally export the textures in the same Workspace colorspace.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-primary"&gt;
&lt;h3&gt;Maya&lt;/h3&gt;
&lt;p&gt;
Now we are in Maya. We need to apply the textures on the asset and the
end goal is to create a render out of it.
The Workspace is now &lt;code&gt;ACEScg&lt;/code&gt; .
This mean we need to convert our texture which are in sRGB to this
colorspace. The Display is the same, only the source colorspace
change, which is now ACEScg.&lt;br /&gt;
Let’s skip quickly to the last department.&lt;br /&gt;
&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-warning"&gt;
&lt;h3&gt;Nuke&lt;/h3&gt;
&lt;p&gt;Nuke keep the same Workspace as Maya, as our Input render is already in ACEScg
we don’t need conversion. As this is the end of the pipeline we have a few
more possibilities here for the Output. Here we want to also be able to
see the composited render on an sRGB Display. As such this mean the
Output needs to be encoded for an sRGB Display, we cannot use the Output
encoded for a DCI-P3 Display.&lt;/p&gt;
&lt;/aside&gt;
&lt;hr /&gt;
&lt;p&gt;You made it yay ! Color-science is a complex topic, so don’t worry if you
don’t get everything the first time. You will find additional resources to
continue your exploration at the end of this article.&lt;/p&gt;
&lt;p&gt;Now, let’s put into practice the theory …&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="substance-setup-workflow"&gt;
&lt;h2&gt;&lt;a href="#id13"&gt;Substance Setup &amp;amp; Workflow&lt;/a&gt;&lt;/h2&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-legacy.png"&gt;&lt;img alt="New project window with color-management tab" src="https://mrlixm.github.io/static/images/blog/0008/sp-project-legacy.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Color-management is not application-dependent but project-dependant.
As such, you will not find any options in the applications settings but in
project ones.&lt;/p&gt;
&lt;section id="new-project"&gt;
&lt;h3&gt;&lt;a href="#id14"&gt;New Project&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The first occurrence of these new options can be found on the &lt;code&gt;New project&lt;/code&gt;
window. You will find a &lt;code&gt;Color Management&lt;/code&gt; sub-menu at the bottom.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-cm-options.png"&gt;&lt;img alt="New project window with color-management tab" src="https://mrlixm.github.io/static/images/blog/0008/sp-project-cm-options.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;aside class="m-note m-info"&gt;
You can change all the color-management settings at any moment in
the project settings. Keep in mind that big changes could break your
project though.&lt;/aside&gt;
&lt;p&gt;You will be offered between two modes &lt;code&gt;Legacy&lt;/code&gt; and &lt;code&gt;OpenColorIO&lt;/code&gt;.
&lt;code&gt;Legacy&lt;/code&gt; corresponds to the pre-release way sp was working with. We will
skip this mode as it is not useful anymore.&lt;/p&gt;
&lt;aside class="m-note m-info"&gt;
Even if you don’t need to use any specific OCIO config, substance offer a
default one for the sRGB workflow which made &lt;strong&gt;the OCIO mode recommended
to use.&lt;/strong&gt;&lt;/aside&gt;
&lt;/section&gt;
&lt;section id="ocio-config"&gt;
&lt;h3&gt;&lt;a href="#id15"&gt;OCIO config&lt;/a&gt;&lt;/h3&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-OCIO-01.png"&gt;&lt;img alt="New project window with OCIO options" src="https://mrlixm.github.io/static/images/blog/0008/sp-project-OCIO-01.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;But wait, wait … what is OCIO ? Why should I use it ?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencolorio.readthedocs.io"&gt;OCIO&lt;/a&gt;
is a color-management solution developed originally by Sony Picture Imageworks
aiming at enforcing color-management consistency between DCCs.
I recommend &lt;a href="https://opencolorio.readthedocs.io/en/latest/concepts/overview/overview.html"&gt;having a read at the documentation&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;OCIO itself only define standards of utilisation and give you the tools to work
but the core of the system is the &lt;strong&gt;OCIO config&lt;/strong&gt; (a &lt;code&gt;.ocio&lt;/code&gt; file).
This is where all the color-transforms and options are defined.
For example, ACES is a color-management system on his own but ship a version
through OCIO.&lt;/p&gt;
&lt;p&gt;The main advantage is that OCIO is supported by most software (even if the
implementation wildly differs between each 😬 ) so you could get the same look
through all of your DCCs (in theory).&lt;/p&gt;
&lt;p class="m-transition"&gt;~&lt;/p&gt;
&lt;p&gt;For our convenience sp already ships with 3 OCIO configs :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Substance&lt;/li&gt;
&lt;li&gt;ACES 1.0.3&lt;/li&gt;
&lt;li&gt;ACES 1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find them in the sp installation folder like this one :&lt;/p&gt;
&lt;pre&gt;C:\Program Files\Allegorithmic\Adobe Substance 3D Painter\resources\ocio&lt;/pre&gt;
&lt;p&gt;Honestly, I don’t know why did they include two ACES versions, only the last
one was needed, but it is awesome to have a default “Substance” config.&lt;/p&gt;
&lt;p&gt;
Lot of flexibility here. First option is to use the shipped configs.
In my opinion only the &lt;code&gt;Substance&lt;/code&gt; config is interesting here.&lt;br /&gt;
The 2 ACES ones are the “default” dev configs with the hundred of
colorspaces you will never need. It is better to use a lightweight ACES
config like &lt;a href="https://caveacademy.com/product/cave-cg-animation-aces-ocio-config/"&gt;the one from CAVE academy&lt;/a&gt;. (see &lt;a href="#aces-workflow"&gt;ACES Workflow&lt;/a&gt;
section)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Substance&lt;/code&gt; config will be a good fit if you are using the traditional
sRGB linear workflow and do not wish to use an OCIO config in every DCC.
You will still have enough control to have a proper color-managed workflow.&lt;/p&gt;
&lt;p&gt;Let’s now see how you could load a custom OCIO config.&lt;/p&gt;
&lt;section id="custom-config"&gt;
&lt;h4&gt;&lt;a href="#id16"&gt;Custom config&lt;/a&gt;&lt;/h4&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-custom.png"&gt;&lt;img alt="New project window with OCIO option set with a custom config." src="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-custom.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;The first option is to use the &lt;code&gt;Custom&lt;/code&gt; option and manually look for
the path to the &lt;code&gt;config.ocio&lt;/code&gt; file on your disk.&lt;/p&gt;
&lt;aside class="m-block m-warning"&gt;
&lt;h3&gt;Only a reference to the config path is saved in the project.&lt;/h3&gt;
&lt;p&gt;When submitting a OCIO config through the &lt;code&gt;Custom&lt;/code&gt; option, &lt;strong&gt;the
config is always loaded live from the disk&lt;/strong&gt;.
This means if you share a substance project with
someone that doesn’t have the OCIO config at the exact same path, you will
see this message pop up :&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-custom-error.png"&gt;&lt;img alt="Error window when the custom config can't be found." src="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-custom-error.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/aside&gt;
&lt;p&gt;See the bottom section &lt;a href="#substance-parameters-for-ocio-configs"&gt;Substance parameters for OCIO configs&lt;/a&gt; to continue
the setup.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="environment-variable"&gt;
&lt;h4&gt;&lt;a href="#id17"&gt;Environment variable&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The above might be enough for individual artists but being in a pipeline
environment requires other ways to set OCIO automatically.&lt;/p&gt;
&lt;aside class="m-note m-info"&gt;
If the OCIO environment variable is present and has a valid configuration
file it will take over to override and disable the UI settings.&lt;/aside&gt;
&lt;p&gt;On Windows you have 2 ways to set environment variables :&lt;/p&gt;
&lt;section id="global-settings"&gt;
&lt;h5&gt;&lt;a href="#id18"&gt;Global Settings&lt;/a&gt;&lt;/h5&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/ocio-env-global.png"&gt;&lt;img alt="Windows creating the OCIO environment variable." src="https://mrlixm.github.io/static/images/blog/0008/ocio-env-global.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;You create a new variable named OCIO with the path to the config.
This variable will be used by ALL software that can read it. (unless
overridden).&lt;/p&gt;
&lt;p&gt;This is not a recommended solution as you pollute your environment variable
+ if you decide to switch the config for another one all your previous project
will be broken.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="set-locally-at-startup"&gt;
&lt;h5&gt;&lt;a href="#id19"&gt;Set locally at startup&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;You defined the environment variable in a start-up script.
This is the cleanest way to do it but means you can’t use the Windows shortcut
to start your software :&lt;/p&gt;
&lt;p&gt;We use a &lt;code&gt;.bat&lt;/code&gt; to configure and launch the software. Here is a basic &lt;code&gt;.bat&lt;/code&gt;
that will set the OCIO variable and then launch sp.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OCIO=C:\aces_1.1\config.ocio&amp;quot;&lt;/span&gt;

start &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\Program Files\Allegorithmic\Adobe Substance 3D Painter\Adobe&lt;/span&gt;
&lt;span class="s2"&gt;Substance 3D Painter.exe&amp;quot;&lt;/span&gt;&lt;/pre&gt;
&lt;aside class="m-note m-default"&gt;
To create a &lt;code&gt;.bat&lt;/code&gt; just create a new &lt;code&gt;.txt&lt;/code&gt; file, paste the above code,
modify it with the path to your config, save it, and then just replace
the &lt;code&gt;.txt&lt;/code&gt; with &lt;code&gt;.bat&lt;/code&gt; in the file’s name.&lt;/aside&gt;
&lt;p&gt;
This means that to launch Substance you will have to always use this .bat.
No “double-clicking” on file to open them either.&lt;br /&gt;
You can have a look on internet at &lt;a href="https://superuser.com/questions/656611/how-to-pin-a-batch-file-to-the-taskbar-quicklaunch/656649"&gt;how to pin a .bat to the taskbar&lt;/a&gt; .&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;But this guarantees a very robust software configuration per project.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="substance-parameters-for-ocio-configs"&gt;
&lt;h4&gt;&lt;a href="#id20"&gt;Substance parameters for OCIO configs&lt;/a&gt;&lt;/h4&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-options.png"&gt;&lt;img alt="Options for OCIO mode in sp.." src="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-options.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;OCIO with Substance config properly configured.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It corresponds to all the sections below the color-management mode. It allows
to configure how inputs react with the OCIO config, i.e which colorspace is
being assigned by default.&lt;/p&gt;
&lt;p&gt;Usually, in other software, this section is configured using the &lt;a href="https://opencolorio.readthedocs.io/en/latest/guides/authoring/overview.html#roles"&gt;OCIO roles&lt;/a&gt; defined in the OCIO configuration.
&lt;span class="m-text m-danger"&gt;But currently sp doesn’t support OCIO roles.&lt;/span&gt; Instead, it is
using the &lt;code&gt;working colorspace&lt;/code&gt; as a default colorspace everywhere, which mean
&lt;span class="m-text m-danger"&gt;you have to manually setup this section&lt;/span&gt; to get a correct result
with the auto settings.&lt;/p&gt;
&lt;p&gt;If you look at the above image, this is how it is supposed to look when picking
the Substance config. By default 8 and 16 bit images are supposed to be
considered as &lt;code&gt;sRGB&lt;/code&gt;, &lt;strong&gt;same goes for substance materials&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Make sure these options are properly configured with the intended colorspaces
for each format if you want all the &lt;code&gt;auto&lt;/code&gt; options to work properly. Most of
them (except Export ones) can be changed in context.&lt;/p&gt;
&lt;p&gt;Visit the &lt;a href="#aces-workflow"&gt;ACES Workflow&lt;/a&gt; section to find how this should be considered if you
are using the ACES config.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="new-project-conclusion"&gt;
&lt;h3&gt;&lt;a href="#id21"&gt;New Project : Conclusion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alright, to recap’ everything for a new project you need :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Change the color-management mode to OCIO&lt;/li&gt;
&lt;li&gt;Choose the OCIO config (already chosen if env variable set)&lt;/li&gt;
&lt;li&gt;Edit the OCIO options to have the correct default colorspaces working.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And of course, setting the other parameters related to your texturing.&lt;/p&gt;
&lt;p&gt;Now you are good to start the texturing workflow. The workflow will be
divided into the same sections explained in the theoretical part of this
article (see &lt;a href="#color-managed-workflow"&gt;Color-managed Workflow&lt;/a&gt;).&lt;/p&gt;
&lt;/section&gt;
&lt;section id="workspace-setup-in-sp"&gt;
&lt;h3&gt;&lt;a href="#id22"&gt;Workspace Setup in Sp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Workspace, in software is actually an “abstract” section. It just
represents the colorspace used as a reference, target or source for every color
transformation. It is defined in the OCIO config and cannot be changed outside
of it.&lt;/p&gt;
&lt;aside class="m-note m-info"&gt;
In the OCIO config it corresponds to the &lt;code&gt;scene_linear&lt;/code&gt; role.&lt;/aside&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-workspace.png"&gt;&lt;img alt="The Working Colorspace displayed in the Color-management tab." src="https://mrlixm.github.io/static/images/blog/0008/sp-project-ocio-workspace.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Visible in the Project’s Color-management section (Using the ACES 1.2 OCIO
config here)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It is just good to know what is the colorspace being used here.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="display-setup-in-sp"&gt;
&lt;h3&gt;&lt;a href="#id23"&gt;Display Setup in Sp&lt;/a&gt;&lt;/h3&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-odt-default.png"&gt;&lt;img alt="View-transform screenshot." src="https://mrlixm.github.io/static/images/blog/0008/sp-odt-default.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A good first step before working is to make sure the Display part is
properly configured so you don’t start texturing while viewing the wrong
colors. This Display part can be configured using what we usually called a
&lt;cite&gt;view-transform&lt;/cite&gt; menu. In sp, you can find it at the top-right of your
viewport.&lt;/p&gt;
&lt;p&gt;What you have to remember is that &lt;span class="m-text m-primary"&gt;you need to choose the option
that corresponds to your display.&lt;/span&gt; If your display is calibrated to the
Display P3 colorspace (Apple displays), choose the Display P3 option.&lt;/p&gt;
&lt;p&gt;But what if I don’t know what my display is calibrated to ?&lt;/p&gt;
&lt;blockquote&gt;
A safe choice would be to assume you are using an sRGB-like display.&lt;/blockquote&gt;
&lt;p id="the-rec709-transfer-function-issue"&gt;I see some people using Rec.709 instead of sRGB, why ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sRGB and Rec.709 share the same primaries, so you can use both without
seeing color-shift due to different primaries. What does change is the
transfer function being used. But fasten your seat-belt, here comes the
mess : Rec.709 only defined an &lt;abbr title="opto-electrical transfer function"&gt;OETF&lt;/abbr&gt;
which is intended for camera signal encoding, not data display encoding !
For display encoding with the Rec.709 colorspace, one should use the
&lt;a href="https://www.itu.int/dms_pubrec/itu-r/rec/bt/R-REC-BT.1886-0-201103-I!!PDF-E.pdf"&gt;BT.1886&lt;/a&gt;
standard which can be resumed as a simple 2.4
&lt;abbr title="= gamma"&gt;power-function&lt;/abbr&gt;.&lt;/p&gt;
&lt;p&gt;So how to know which one of these two is being used ? Simple, if when
compared to sRGB, the image looks darker, it’s the OETF, if it’s looking
less contrasty, it’s BT.1886.&lt;/p&gt;
&lt;p&gt;If you do the test, the Substance config use the OETF (which should not
be used), while the ACES config uses BT.1886.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You didn’t answer my question !? I’m just more confused now !&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As written previously, you need to choose the option that corresponds to
your display, so if your display is not calibrated to Rec.709+BT.1886
don’t use it. But some people like the look of it, being less contrasty,
that’s why it’s being chosen. But the display should not be a creative
choice. If you like a less contrasty look, you should apply it in the Look
(see under).&lt;/p&gt;
&lt;p&gt;Just to add more confusion, the BT.1886 difference with sRGB can
actually be used as a viewing environment compensation. So it can actually
justify why using Rec709+BT.1886 instead of sRGB.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anyways, I’m going too far from the subject, and someone already
wrote about this topic, I let you read this mind-blowing article from
Chris Brejon &lt;a href="https://chrisbrejon.com/articles/ocio-display-transforms-and-misconceptions/"&gt;OCIO, Display Transforms and Misconceptions&lt;/a&gt;.&lt;/p&gt;
&lt;section id="displaying-color-and-scalar-data"&gt;
&lt;h4&gt;&lt;a href="#id24"&gt;Displaying Color and Scalar data&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Sp will handle it for you automatically, depending on the channel you
are previewing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://substance3d.adobe.com/documentation/spdoc/color-management-223053233.html#section5"&gt;The full list of color-managed channels is available here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For example, selecting the Roughness channel for preview will disable the
view-transform :&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-odt-off.png"&gt;&lt;img alt="View-transform screenshot, when scalar data is selected." src="https://mrlixm.github.io/static/images/blog/0008/sp-odt-off.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;If you are using a custom &lt;code&gt;User&lt;/code&gt; channel, you will have to manually
specify if the channel is color-managed though. (By default they are not)&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="input-setup-in-sp"&gt;
&lt;h3&gt;&lt;a href="#id25"&gt;Input Setup in Sp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Texturing is all about mixing already existing images, with some carefully
crafted paint stroke, and funky procedural resources. All of these, if they
are color-data, have been created and saved with a specific colorspace.
We will need to know and then specify this colorspace to sp so the OCIO
processor can know if it needs conversion to the Workspace colorspace.&lt;/p&gt;
&lt;section id="shelf-resources"&gt;
&lt;h4&gt;&lt;a href="#id26"&gt;Shelf Resources&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In Sp this manipulation takes place, weirdly, on the images slots of each
layer. You will not find any option to specify the colorspace in the shelf.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-in-bobross.png"&gt;&lt;img alt="Screenshots of the Input colorspace option for layers." src="https://mrlixm.github.io/static/images/blog/0008/sp-in-bobross.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;By default, it is set to &lt;code&gt;auto&lt;/code&gt;, which will use the settings specified in the
project color-management settings explained above.
(&lt;a href="#substance-parameters-for-ocio-configs"&gt;Substance parameters for OCIO configs&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I recommend always modifying this option to the proper colorspace to be sure
the resource is properly color-managed.&lt;/p&gt;
&lt;p&gt;Another option is to have the source colorspace specified in the file name.
That’s in my opinion a bit messy because the colorspace has to be the exact
name used in the config. If 2 configs used a different name, your image will
only work for one. If I take for example a colorspace name used in the ACES
config this could give: &lt;code&gt;bricks_wall_albedo_Utility - Linear - sRGB.exr&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-color-picker"&gt;
&lt;h4&gt;&lt;a href="#id27"&gt;The color-picker&lt;/a&gt;&lt;/h4&gt;
&lt;div class="l-flex-r l-flex-start l-gap-1"&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-colorpicker.png"&gt;&lt;img alt="Screenshots of the color picker." src="https://mrlixm.github.io/static/images/blog/0008/sp-colorpicker.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="l-flex-shrink-2"&gt;
&lt;p&gt;As used as feared by artists. It never react how the artist wants
and looks to be made out of dark magic (at least in Mari 🙃 ).
Did the sp implementation bring any good news ? Let’s see.&lt;/p&gt;
&lt;p&gt;Abbreviations used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tcd&lt;/code&gt; : top colorspace dropdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eds&lt;/code&gt; : editable sliders, where you can manually enter your color
components.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First really good feature is the little info icon, giving explicit
info on how the widget works. But the given info brings some bad
news; if we have a look at the info message next to the &lt;code&gt;tcd&lt;/code&gt; :&lt;/p&gt;
&lt;blockquote&gt;
This is the display color space used for displaying the on-screen
image. The editable color values are specified within the project’s
working color space.&lt;/blockquote&gt;
&lt;p&gt;What this means is that in the values sliders under, the value entered
are always in the colorspace defined by the project’s working
color space. So you could change the &lt;code&gt;tcd&lt;/code&gt; but
this won’t modify the value entered.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The “tcd“ only modify how the color is displayed in the
interface.&lt;/strong&gt; (you can see this displayed value under the &lt;code&gt;eds&lt;/code&gt;)&lt;/p&gt;
&lt;aside class="m-note m-info"&gt;
As such it is recommended to set the &lt;code&gt;tcd&lt;/code&gt; to the same colorspace
being used in the view-transform.&lt;/aside&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id="picker"&gt;What about the actual picker ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Same thing, the value that is being picked is expressed in the working
colorspace. It is not affected by the &lt;code&gt;tcd&lt;/code&gt;.&lt;br /&gt;
But there is a &lt;span class="m-text m-s"&gt;little&lt;/span&gt; huge twist !&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After &lt;a href="https://liamcollod.notion.site/Substance-Painter-Color-Picker-Issue-1d1cdeeb0e2846ba977ebc453e5ae56b"&gt;some extensive testing&lt;/a&gt;,
I can unfortunately say that the picker is not
consistent depending of the OCIO config you are using. It works in some
cases and it is broken in others. I’m still not sure about what the issue
actually is but here is what I have :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Case 1&lt;/code&gt; : You are using an OCIO v2 config that &lt;strong&gt;uses Display
colorspaces and Shared Views&lt;/strong&gt; (OCIO v2 new features) :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The picker take the value at the display (after the
view-transform is applied) and return it.&lt;/p&gt;
&lt;p&gt;This only work when there is, well …, no view-transform, i.e. is
it is disabled or use a display with a “passtrough/raw” encoding. If
you are viewing color data with the proper view-transform, the
picked value will not correspond to the original value you used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Case 2&lt;/code&gt; : You are using an OCIO v1 config or v2 without the new
features :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The picker take the value at display (with the view-transform), then
apply an inverse display transform. It pick the default one, i.e. the
first defined in the config or in the &lt;code&gt;active_displays&lt;/code&gt; key.
And as the sliders don’t go above 1, the result is clamped between the
0-1 range 🙂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class="m-note m-warning"&gt;
You need to also take into consideration the color-picker precision issues.
Applying an invert color-transformations can lead in some cases to
imprecisions + the picking operation has precisions
issues by itself&lt;/aside&gt;
&lt;p&gt;This means the colorpicker is unfortunately again, broken. But
with the above in mind, it is still possible to get back the correct values.&lt;/p&gt;
&lt;aside class="m-block m-primary"&gt;
&lt;h3&gt;For &lt;code&gt;Case 1&lt;/code&gt; :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Disable the view-transform whenever you want to pick a value.&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-primary"&gt;
&lt;h3&gt;For &lt;code&gt;Case 2&lt;/code&gt; :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Set the &lt;code&gt;tcd&lt;/code&gt; to the default view-transform colorspace.&lt;/li&gt;
&lt;li&gt;Pick your value.&lt;/li&gt;
&lt;li&gt;Look at the values in the &lt;code&gt;Display colorspace&lt;/code&gt; widget, and copy
them in the &lt;code&gt;eds&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;p&gt;If you are curious I made a bug report on the forum here :
&lt;a class="m-link-wrap" href="https://community.adobe.com/t5/substance-3d-painter-discussions/color-picker-doesn-t-behave-consistent-across-ocio-configs/td-p/12603389"&gt;https://community.adobe.com/t5/substance-3d-painter-discussions/color-picker-doesn-t-behave-consistent-across-ocio-configs/td-p/12603389&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="environment"&gt;
&lt;h4&gt;&lt;a href="#id28"&gt;Environment&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;There is no direct option to modify the environment image colorspace.&lt;/p&gt;
&lt;p&gt;Your options are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify the default &lt;code&gt;Linear&lt;/code&gt; colorspace in the project settings. The
environments maps will use it.&lt;/li&gt;
&lt;li&gt;Include the source colorspace in the name of the HDRI. It has to be the
&lt;strong&gt;exact same name&lt;/strong&gt; as defined in the config. Example :
&lt;code&gt;myhdri_ACES - ACEScg.exr&lt;/code&gt;. (you can find an example in &lt;a href="#aces-environment"&gt;ACES -
Environment&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The pre-integrated HDRIs are encoded with a &lt;code&gt;linear - sRGB&lt;/code&gt; colorspace.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="masks"&gt;
&lt;h4&gt;&lt;a href="#id29"&gt;Masks&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;When you right-click on a mask you have the option to &lt;code&gt;Export mask as File&lt;/code&gt;.
Don’t worry, mask seems to always be considered as scalar and exported
without any treatment.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="output-setup-in-sp"&gt;
&lt;h3&gt;&lt;a href="#id30"&gt;Output Setup in Sp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Export Textures window didn’t got much new. We doesn’t have any options
to apply a color-transformation at export time in the Window. The only options
are the one available into the project settings.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-project-export.png"&gt;&lt;img alt="Sp project settings export options." src="https://mrlixm.github.io/static/images/blog/0008/sp-project-export.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Basically, integer format should be sRGB display encoded. Floating point format
should use the same working colorspace.&lt;/p&gt;
&lt;p&gt;What’s new though is the &lt;code&gt;$colorspace&lt;/code&gt; token in the Output Templates tab.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-export-template.png"&gt;&lt;img alt="Sp Export window, Output template tab." src="https://mrlixm.github.io/static/images/blog/0008/sp-export-template.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Which is simply replaced by the colorspace defined in the project settings.
(You can have a preview of the file name in the &lt;code&gt;LIST OF EXPORT&lt;/code&gt; tab).&lt;/p&gt;
&lt;p&gt;I’m personaly not fan of this option as this might introduce special characters
in the file’s name, depending on how the colorspace is named. It is, I think,
a better option to have the texture name without the colorspace, but exported
in a directory with the colorspace name.&lt;/p&gt;
&lt;p&gt;For scalar channels, sp will not apply any color-transformation
and consider them using the colorspace &lt;code&gt;raw&lt;/code&gt; (no matter the config).
Interstingly, this colorspace &lt;code&gt;raw&lt;/code&gt; doesn’t get written into the
&lt;code&gt;$colorspace&lt;/code&gt; token as it should. &lt;em&gt;(fixed in 7.4.1)&lt;/em&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="aces-workflow"&gt;
&lt;h2&gt;&lt;a href="#id31"&gt;ACES Workflow&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m not going to get into the what and the why, only the how. Let’s keep the
rest for a next (potential) article ?&lt;/p&gt;
&lt;section id="aces-config-setup"&gt;
&lt;h3&gt;&lt;a href="#id32"&gt;ACES - Config setup&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You could use the one shipped with Substance but I wouldn’t recommend so.
They are the ones with the hundred colorspaces that will just slow you down
when you need to choose one.&lt;/p&gt;
&lt;p&gt;Instead, it would be smarter to use a config with only what you need like
&lt;a href="https://caveacademy.com/product/cave-cg-animation-aces-ocio-config/"&gt;the one from CAVE academy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then you will need to configure the default colorspaces. Using the Cave config
(which have the same nomenclature as the official ACES ones) here is what I
recommend :&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-aces-project.png"&gt;&lt;img alt="Substance project window with ACES setuped properly." src="https://mrlixm.github.io/static/images/blog/0008/sp-aces-project.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Import settings are the usual stuff, most of the 8bit texture, if not all
are sRGB display encoded files so &lt;code&gt;Utility - sRGB - Texture&lt;/code&gt; correspond.
Floating point images like EXRs should always be linear so the alternative
version &lt;code&gt;Utility - Linear - sRGB&lt;/code&gt; is the right choice. Remember these options
are just applied by default (with the &lt;code&gt;auto&lt;/code&gt; colorspace) but can be
changed anytime.&lt;/p&gt;
&lt;p&gt;I choose &lt;code&gt;Utility - sRGB - Texture&lt;/code&gt; for &lt;code&gt;Substance materials&lt;/code&gt; because
it seems the output is always sRGB display encoded as the screenshot under
show. (colorspace options can be modified on the material anyway).&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-mat-colorspace.png"&gt;&lt;img alt="Substance viewport screenshot with different default for materials." src="https://mrlixm.github.io/static/images/blog/0008/sp-mat-colorspace.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Model by &lt;a href="https://www.artstation.com/ashimara"&gt;Emmanuel-Xuân Dubois&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Now for the output my choice is not the only option. To me, you shouldn’t
export ACEScg 8bit files, that why I re-encode them back to sRGB by using
&lt;code&gt;Utility - sRGB - Texture&lt;/code&gt;. The right option is to export EXRs (floating
point images) in the same working colorspace: ACEScg. And don’t worry for
scalar channel they will be handled automatically at export. These options
are the only ones that can’t be modified per-case though; this is the only
place you can change them.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="aces-what-to-do-when-working"&gt;
&lt;h3&gt;&lt;a href="#id33"&gt;ACES - What to do when working&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m only going to give detailed explanations when something is specific to
ACES. Meanwhile the explanations given in &lt;a href="#substance-setup-workflow"&gt;Substance Setup &amp;amp; Workflow&lt;/a&gt; still
apply so make sure you properly understood this section.&lt;/p&gt;
&lt;section id="aces-display"&gt;
&lt;h4&gt;&lt;a href="#id34"&gt;ACES - Display&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Not much new, use the view-transform that correspond to the display you are
using. (In my case &lt;code&gt;ACES - sRGB&lt;/code&gt;, that behind the scene, uses &lt;code&gt;Output -
sRGB&lt;/code&gt;)&lt;/p&gt;
&lt;/section&gt;
&lt;section id="aces-inputs"&gt;
&lt;h4&gt;&lt;a href="#id35"&gt;ACES - Inputs&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For every external resource you import, you need to assign the correct
input colorspace if the automatic one doesn’t correspond. The usual rules
for the ACES workflow apply.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/diagram-aces-idt.jpg"&gt;&lt;img alt="ACES IDT Cheatsheet." src="https://mrlixm.github.io/static/images/blog/0008/diagram-aces-idt.jpg" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;section id="aces-environment"&gt;
&lt;h5&gt;&lt;a href="#id36"&gt;ACES - Environment&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;There is unfortunately no direct options to change environment’s colorspace.
But they follow default colorspace rules. And as they are floating point image
they use the pre-defined &lt;code&gt;Utility - Linear - sRGB&lt;/code&gt; colorspace. As such, as
long as they are sRGB - linear encoded, they will be properly displayed.&lt;/p&gt;
&lt;p&gt;But what if I want to import an already converted ACEScg HDRI ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a way to have it working. You can specify the colorspace in the
file name. The colorspace has to be &lt;strong&gt;the exact same name&lt;/strong&gt; as the one
defined in the config. An example would be: &lt;code&gt;myhdri_ACES - ACEScg.exr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Left one is sRGB encoded, middle and right ACEScg encoded. Right one
doesn’t get properly converted and looks shifted.&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-aces-hdri-comparison.png"&gt;&lt;img alt="Sp viewport screenshot with hdri comparison." src="https://mrlixm.github.io/static/images/blog/0008/sp-aces-hdri-comparison.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Model and texturing by &lt;a href="https://www.artstation.com/ashimara"&gt;Emmanuel-Xuân Dubois&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="aces-colorpicker"&gt;
&lt;h4&gt;&lt;a href="#id37"&gt;ACES - Colorpicker&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The colorpicker by default and in my case use the same colorspace as the
first view_transform. This means the color I see in the picker is the same in
the viewport. As mentioned in &lt;a href="#the-color-picker"&gt;The color-picker&lt;/a&gt; section the sliders values
are expressed in the working-colorspace, in our case ACEScg.&lt;/p&gt;
&lt;p&gt;Consider the following example :&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker.png"&gt;&lt;img alt="Substance colorpicker with ACES workflow." src="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Model by &lt;a href="https://www.artstation.com/ashimara"&gt;Emmanuel-Xuân Dubois&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I have an ACEScg value of (1,0,0) which is damn too saturated
and no object except laser are that saturated.&lt;/p&gt;
&lt;aside class="m-note m-warning"&gt;
This mean you have to be careful
when picking values, and always keep a look at the scene-refered ACEScg
values.&lt;/aside&gt;
&lt;p&gt;What if I want to apply a color we gave me as hexadecimal ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Consider my brand’s green picked from &lt;a class="m-link-wrap" href="https://coolors.co"&gt;https://coolors.co&lt;/a&gt; .&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker-hex.png"&gt;&lt;img alt="Substance colorpicker with ACES workflow." src="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker-hex.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Model by &lt;a href="https://www.artstation.com/ashimara"&gt;Emmanuel-Xuân Dubois&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Well … the less brain-damaging solution would be to just eyeball the
color.&lt;/p&gt;
&lt;p&gt;The first issue here is that the color is probably sRGB display
encoded and need to first be linearized, then converted to ACEScg.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker-conversion.png"&gt;&lt;img alt="Nuke screenshot to convert sRGB hex value to ACEScg" src="https://mrlixm.github.io/static/images/blog/0008/sp-aces-colorpicker-conversion.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;The above should give you an idea of how to achieve this with Nuke.
The ACEScg values can be found at the bottom right of the image.
But as you can see the viewer color (with the ACES ODT applied) is still
different from the preview on coolors website !&lt;/p&gt;
&lt;p&gt;Keep this in mind: &lt;span class="m-text m-primary"&gt;you will never be able to match the look
of the sRGB workflow with the ACES workflow.&lt;/span&gt; (unless cheating).&lt;/p&gt;
&lt;p&gt;I’m not going to dive into further explanations as there is &lt;a href="https://community.acescentral.com/t/preserving-logos-and-graphics-in-aces/2861"&gt;enough threads
on this subject&lt;/a&gt;
on ACES central and Chris &lt;a href="https://chrisbrejon.com/cg-cinematography/chapter-1-5-academy-color-encoding-system-aces/#inverted-odt-workflow"&gt;is already explaining it here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="aces-output"&gt;
&lt;h4&gt;&lt;a href="#id38"&gt;ACES - Output&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Do yourself a favour here and only care about EXR. &lt;a href="https://www.elsksa.me/scientia/cgi-offline-rendering/file-format-debunk"&gt;You don’t need anything
else&lt;/a&gt; and this is the file format recommended by the Academy for ACES
data encoding.&lt;/p&gt;
&lt;p&gt;If you choose EXR, you have nothing to care about. Color channel will be
exported in &lt;code&gt;ACEScg&lt;/code&gt; while scalar channel will bypass any
color-transform encoding. Simple as that.&lt;/p&gt;
&lt;p&gt;Reminder that you can choose to remove the &lt;code&gt;$colorspace&lt;/code&gt; token in your
export template map name to avoid unwanted special characters in your file
name. (and instead export the textures in a folder named ACEScg)&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="ocio-implementation-issues"&gt;
&lt;h2&gt;&lt;a href="#id39"&gt;OCIO Implementation Issues&lt;/a&gt;&lt;/h2&gt;
&lt;aside class="m-note m-default"&gt;
The goal here is not to denigrate the dev team’s works but rather to offer
explanations and solutions for improving the software.&lt;/aside&gt;
&lt;section id="display-issues"&gt;
&lt;h3&gt;&lt;a href="#id40"&gt;Display Issues&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These explanations were made possible thanks to the Chris Brejon’s article
&lt;a href="https://chrisbrejon.com/articles/ocio-display-transforms-and-misconceptions/"&gt;OCIO, Display Transforms and Misconceptions&lt;/a&gt;.&lt;/p&gt;
&lt;section id="display-components-mismatch"&gt;
&lt;h4&gt;&lt;a href="#id41"&gt;Display components mismatch&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;OCIO divide the Display section into 3 components :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Display&lt;/code&gt; : the physical hardware you are using (monitor, TV, phone, …).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;View&lt;/code&gt; : a way to encode the data for a specific viewing purpose.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Look&lt;/code&gt; : a creative layer of modification on the data. ex: a grade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why do I explain you this ? Because these components are often mismatched
or forgotten. Unfortunately, Substance makes no exception here.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-odt-default.png"&gt;&lt;img alt="View-transform screenshot." src="https://mrlixm.github.io/static/images/blog/0008/sp-odt-default.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;If you look at the view-transform screenshot above, you can see that each
option has the &lt;code&gt;Default&lt;/code&gt; prefix.
If we have a look at the &lt;code&gt;config.ocio&lt;/code&gt; file from the Substance config,
we can see why :&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/config-substance-displays.png"&gt;&lt;img alt="Screenshot of the displays part of the Substance Ocio config." src="https://mrlixm.github.io/static/images/blog/0008/config-substance-displays.png" /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;What should be a &lt;code&gt;display&lt;/code&gt; or a separate &lt;code&gt;view&lt;/code&gt; is actually all merged
into a single &lt;code&gt;view&lt;/code&gt; component !&lt;/p&gt;
&lt;p id="substance-config-displays-fixed"&gt;Here is how it should look :&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="nt"&gt;displays&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;sRGB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;sRGB&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;ACES&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;ACES sRGB&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;Display P3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display P3&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;Rec709 &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Rec709&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;Rec2020 &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Rec2020&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;False Color&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Raw&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Here is the result of the above in Substance Painter :&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/config-substance-fixed-sp.png"&gt;&lt;img alt="Screenshot of the displays part of the Substance Ocio config." src="https://mrlixm.github.io/static/images/blog/0008/config-substance-fixed-sp.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Using OCIO v2 there are other ways to improve how the config is built.
Heads up to &lt;a href="#improving-the-substance-ocio-config"&gt;Improving the Substance OCIO config&lt;/a&gt; to see how.&lt;/p&gt;
&lt;p&gt;But even with this fix, it’s not very friendly to have a long list of merged
(display + view) while you would only need one Display most of the time. &lt;strong&gt;The
best solution here would be to have 2 dropdowns&lt;/strong&gt; :
One to choose the Display, and one to choose the corresponding available View.
We should even get a third one for looks as we are going to see in the next
section :&lt;/p&gt;
&lt;/section&gt;
&lt;section id="partial-look-support"&gt;
&lt;h4&gt;&lt;a href="#id42"&gt;Partial Look support&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In above explanations where I mention OCIO Display is build with
3 components, we now see that I didn’t mention the last one yet: Looks.&lt;/p&gt;
&lt;p&gt;Looks is a color-tansformation performed in any colorspace aimed at
modifying the data in a creative way. This would allow for example the
artist to have a first look at how its renders could looks like after the
&lt;abbr title="Digital Intermediate = grading process"&gt;di&lt;/abbr&gt; pass.&lt;/p&gt;
&lt;p&gt;Usually, Looks are defined similar to colorspaces, as a list, but you can also
make a Look available in a display’s view:&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="nt"&gt;displays&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;sRGB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;sRGB-Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Display Grade A&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;sRGB-Display&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; looks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;gradeA&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;looks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;Look&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;gradeA&lt;/span&gt;
  &lt;span class="nt"&gt;process_space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;rclg16&lt;/span&gt;
  &lt;span class="nt"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;FileTransform&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;look_A.cc&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; interpolation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;linear&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;In the best case, we should have a dropdown menu that would allow us to combine
the current &lt;code&gt;view-transform&lt;/code&gt; with any Look defined. A good example of this
is Blender :&lt;/p&gt;
&lt;figure class="m-figure"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/blender-cm.png"&gt;&lt;img alt="Screenshot of Blender color-management menu." src="https://mrlixm.github.io/static/images/blog/0008/blender-cm.png" /&gt;&lt;/a&gt;
&lt;figcaption&gt;Notice how it respects the 3 components of an OCIO display.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Unfortunately, sp didn’t implement this feature yet. So we can only rely
on merging the look in a display view for now.&lt;/p&gt;
&lt;p&gt;A good way to test this is using the &lt;a href="https://github.com/sobotka/filmic-blender"&gt;Filmic&lt;/a&gt; OCIO config by Troy Sobotka.
The filmic encoding is correctly available in a &lt;code&gt;View&lt;/code&gt; but require an
extra step to be correctly displayed. By default it is a flat log
representation, and require choosing a Look with the desired contrast amount.&lt;/p&gt;
&lt;p&gt;To have it working in sp, it is required to merge the Look in a new &lt;code&gt;View&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="m-code"&gt;&lt;span class="nt"&gt;displays&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;sRGB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;sRGB OETF&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;sRGB OETF&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;...&lt;/span&gt;
        &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="kt"&gt;!&amp;lt;View&amp;gt;&lt;/span&gt; &lt;span class="p p-Indicator"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Filmic Very High Contrast&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; colorspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Filmic Log Encoding&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="nt"&gt; look&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;+Very High Contrast&lt;/span&gt;&lt;span class="p p-Indicator"&gt;}&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;...&lt;/span&gt;&lt;/pre&gt;
&lt;p id="sp-odt-name-cropped"&gt;Which in sp, if we kept all the contrast amount, give us a very long list of
cropped name 😬 But at least it’s working.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0008/sp-odt-filmic.png"&gt;&lt;img alt="Screenshot of sp view-transform with filmic view." src="https://mrlixm.github.io/static/images/blog/0008/sp-odt-filmic.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="improving-the-substance-ocio-config"&gt;
&lt;h3&gt;&lt;a href="#id43"&gt;Improving the Substance OCIO config&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Substance OCIO config is an OCIO v1 configuration. I don’t know
what is the reason they decided to not use the v2 for their config because
it could really helped having a cleaner and better config (even if the artist
wouldn’t see that much of a difference).&lt;/p&gt;
&lt;p&gt;By curiosity I tried to put my hand on OCIO v2 and create a config that could
be a substitution of the Substance config. Documentation was pretty straight
forward and I manage to build a nice config using python. You can find the
result here :&lt;/p&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://github.com/MrLixm/OCIO.Liam"&gt;https://github.com/MrLixm/OCIO.Liam&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I called it &lt;code&gt;Versatile&lt;/code&gt;. It only misses the &lt;code&gt;false color&lt;/code&gt; view from the
Substance config. Have a look at the
&lt;a href="https://github.com/MrLixm/OCIO.Liam/blob/main/versatile/config/config.ocio"&gt;config.ocio&lt;/a&gt;
file to see the new features.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="issues-recap"&gt;
&lt;h3&gt;&lt;a href="#id44"&gt;Issues Recap&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;
This list aim at helping the potential Substance dev team members reading
this, addressing the issues.&lt;br /&gt;
&lt;em&gt;Keep in mind that this is my personal opinion, i’m not a color-scientist
nor a profesional developer.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;
Substance config uses the wrong Rec.709 display encoding.&lt;br /&gt;
(see &lt;a href="#the-rec709-transfer-function-issue"&gt;the rec709 transfer-function issue&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Substance config miss simple P3 colorspaces while it offers a Rec2020 one
(who would use it ??)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Substance config &lt;code&gt;displays&lt;/code&gt; key is not properly built.&lt;br /&gt;
(see &lt;a href="#substance-config-displays-fixed"&gt;substance-config-displays-fixed&lt;/a&gt; )&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Substance config could overall, benefits from using OCIO v2 features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
OCIO roles are not supported, as such default configuration for
projects is wrong and can confuse artists.&lt;br /&gt;
(see &lt;a href="#substance-parameters-for-ocio-configs"&gt;Substance parameters for OCIO configs&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
The view-transform dropdown is too small in width. When selecting long
&lt;code&gt;display&lt;/code&gt; names, they got cropped.&lt;br /&gt;
(see &lt;a href="#sp-odt-name-cropped"&gt;sp-odt-name-cropped&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
The view-transform dropdown could be split into 2 dropdowns. One for
Displays and one for Views.&lt;br /&gt;
(see &lt;a href="#substance-config-displays-fixed"&gt;substance-config-displays-fixed&lt;/a&gt; )&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Colorspace on resources (images, …) should be performable from the shelf
and not from a layer’s slot. A resource doesn’t have its original
colorspace changing depending on where it’s used !&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
There is no direct option to change the environment image colorspace.
Having the above suggestion implemented would solve this one too.&lt;br /&gt;
(see &lt;a href="#environment"&gt;Environment&lt;/a&gt; )&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Color-picker : modifying the top colorspace should affect the editable
values. Where the top colorspace represents the colorspace used to enter
values so they can be converted to the working colorspace behind the scene.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the above, add a way to see what values are being used in the
workspace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Color-picker is broken. It react differently depending of the OCIO
config version use.&lt;br /&gt;
(see &lt;a href="#picker"&gt;picker&lt;/a&gt; section for details)&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No options to set a specific colorspace for textures at export time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When use the following OCIO v2 colorspace name token, an error is logged:&lt;/p&gt;
&lt;pre class="m-code"&gt;[ColorManagement] Error while creating OpenColorIO colorspace transform: Color space &amp;#39;&amp;lt;USE_DISPLAY_NAME&amp;gt;&amp;#39; could not be found&lt;/pre&gt;
&lt;p&gt;But displays still manage to work without issues.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;&lt;a href="#id45"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Damn that was a long one. Congrats if you stick to the end, I hope you
now have an idea of how you could use OCIO in SubstancePainter. If not,
don’t hesitate to &lt;a href="/pages/contact"&gt;contact&lt;/a&gt; me to suggest how this
article could be improved. (you can also join the discord, click on the purple
button at the bottom of this page)&lt;/p&gt;
&lt;p&gt;If you like this post and wish to support me you could buy some of my
scripts on &lt;a href="https://app.gumroad.com/pyco"&gt;my Gumroad&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I see you in the next one that would probably be on the same topic but on
Mari. 👋&lt;/p&gt;
&lt;/section&gt;
&lt;section id="resources"&gt;
&lt;h2&gt;&lt;a href="#id46"&gt;Resources&lt;/a&gt;&lt;/h2&gt;
&lt;aside class="m-block m-default"&gt;
&lt;h3&gt;The Hitchhiker’s Guide to Digital Colour&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://hg2dc.com/"&gt;https://hg2dc.com/&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-default"&gt;
&lt;h3&gt;Chris Brejon&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://chrisbrejon.com/cg-cinematography/chapter-1-color-management"&gt;https://chrisbrejon.com/cg-cinematography/chapter-1-color-management&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-default"&gt;
&lt;h3&gt;ACES Central&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://community.acescentral.com/"&gt;https://community.acescentral.com/&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-default"&gt;
&lt;h3&gt;Cinematic Color&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://cinematiccolor.org/"&gt;https://cinematiccolor.org/&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="m-block m-default"&gt;
&lt;h3&gt;A Color-Science Discord server&lt;/h3&gt;
&lt;p&gt;&lt;a class="m-link-wrap" href="https://discord.gg/jk6u3eB"&gt;https://discord.gg/jk6u3eB&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;/section&gt;
&lt;section id="changelog"&gt;
&lt;h2&gt;&lt;a href="#id47"&gt;Changelog&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;17-12-2021&lt;/code&gt;: fixed &lt;a href="#the-color-picker"&gt;The color-picker&lt;/a&gt; section. &lt;a href="https://community.acescentral.com/t/aces-and-substance-painter/2299/42"&gt;Discussion available here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
</content><category term="tutorial"></category><category term="substance-painter"></category><category term="color-science"></category><category term="OCIO"></category><category term="ACES"></category></entry><entry><title>OpenDRT : a nice (experimental) alternative to ACES</title><link href="https://mrlixm.github.io/blog/opendrt/" rel="alternate"></link><published>2021-11-24T19:02:00+01:00</published><updated>2021-11-24T19:02:00+01:00</updated><author><name>Liam Collod</name></author><id>tag:mrlixm.github.io,2021-11-24:/blog/opendrt/</id><summary type="html">&lt;p&gt;An open-source alternative to convert scene-linear data to SDR or
HDR display image.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;With the Academy Color Encoding System (ACES) becoming omnipresent more and
more, it would be worth keeping in mind that it’s not the only solution to have
a good color-managed pipeline (let’s keep that for a future article) .
I’m not going to try to go too far and stick to the title even tho there is
a lot to discuss on the topic.&lt;/p&gt;
&lt;p&gt;If most people get into ACES, it’s mainly for its “filmic” looks (provided by
the RRT), rather than having a full color-managed workflow.
And that is understandable, as individual artists, you most of the time, only
care about having the prettiest image possible at the end.&lt;/p&gt;
&lt;p&gt;So what if you got a well-formed and pleasing image at the end without having
to go through the complexity of ACES ?&lt;/p&gt;
&lt;aside class="contents m-block m-default" id="contents"&gt;
&lt;h3&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#who-s-this-for" id="id1"&gt;Who’s this for ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#node-knobs" id="id2"&gt;Node knobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nuke" id="id3"&gt;Nuke&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#node-setup" id="id4"&gt;Node Setup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#revert-display" id="id5"&gt;Revert Display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nuke-display-encoding-disable" id="id6"&gt;Nuke Display-encoding disable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#opendrt-no-display-encoding" id="id7"&gt;OpenDRT no Display-encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#opendrt-with-viewer-input-process-recommended" id="id8"&gt;OpenDRT with Viewer Input Process (recommended)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion" id="id9"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;section id="who-s-this-for"&gt;
&lt;h2&gt;&lt;a href="#id1"&gt;Who’s this for ?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My post mainly targets the VFX-CGI audience but OpenDRT work on any
open-domain/scene-referred data, including photography and cinematography.
(as long as the data is not in a closed-display-domain).&lt;/p&gt;
&lt;p&gt;This means that for CGI, you are familiar with a “scene-linear workflow” :&lt;/p&gt;
&lt;pre&gt;Render -[EXR]&amp;gt; compositing/postprod(linear) -&amp;gt; display-refered final output [jpg,...]&lt;/pre&gt;
&lt;p&gt;
Then the OpenDRT implementation is only available as a Nuke Gizmo and
through Davinci Resolve DCTL feature (on paid licenses) which imply you
are using one of these dccs.&lt;br /&gt;
No OCIO support, this means you will have with your traditional workflow in
your rendering DCC and only be able to preview the final image in your
post-prod one which is not an ideal one.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;With all of that , this mean &lt;strong&gt;my post is aimed at individual artist doing
personal projects that would like a quick solution for proper SDR-HDR export.&lt;/strong&gt;
(OpenDRT is probably aimed at additionals goal)&lt;/p&gt;
&lt;p class="m-transition"&gt;~&lt;/p&gt;
&lt;aside class="m-block m-primary"&gt;
&lt;h3&gt;OpenDRT Repository&lt;/h3&gt;
&lt;p&gt;Download on Github: &lt;a class="m-link-wrap" href="https://github.com/jedypod/open-display-transform"&gt;https://github.com/jedypod/open-display-transform&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;p&gt;First, please have a look at the above repository, read Jed’s explanations and
the tool’s documentation.&lt;/p&gt;
&lt;p&gt;Before diving into the setup I think it’s important to remind the target
of OpenDRT:&lt;/p&gt;
&lt;blockquote&gt;
The tool has for goal the faithful conversion of open-domain /
scene-referred data to a closed-domain : the display. This mean
&lt;strong&gt;no creative transformations are applied&lt;/strong&gt;. As such the output’s result
can look very neutral and should be graded.&lt;/blockquote&gt;
&lt;/section&gt;
&lt;section id="node-knobs"&gt;
&lt;h2&gt;&lt;a href="#id2"&gt;Node knobs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As the tool is constantly changing, Jed’s documentation is not up to date,
and thus this post will also probably be.&lt;/p&gt;
&lt;aside class="m-note m-default"&gt;
All the examples are using Opendrt version &lt;code&gt;0.0.90b2&lt;/code&gt;&lt;/aside&gt;
&lt;div class="m-row"&gt;
&lt;div class="m-container-inflate m-col-l-5 m-left-l"&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0004/nuke.opendrt.png"&gt;&lt;img alt="OpenDRT global overview" src="https://mrlixm.github.io/static/images/blog/0004/nuke.opendrt.png" style="width: 280px" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="m-col-l-7"&gt;
&lt;p&gt;
First thing, tell the tool in which &lt;code&gt;gamut&lt;/code&gt; your input is.&lt;br /&gt;
I assume the input should be Linearly encoded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;You then have a bunch of presets that will tweak the knobs for you
based on your target display encoding.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Lw&lt;/code&gt; : this is the nits level of the target display and shouldn’t be
used as a creative adjustment.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100nits is the value defined as per the
&lt;a href="https://www.itu.int/dms_pubrec/itu-r/rec/bt/R-REC-BT.2035-0-201307-I!!PDF-E.pdf"&gt;ITU-R  BT.2035&lt;/a&gt;
specifications and should represent the peak-white value of a
display in a dim surround.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;surround&lt;/code&gt; : the luminance level of the viewing environment.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dark&lt;/code&gt; : theatrical viewing environment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dim&lt;/code&gt;: “home theater” (low light condition).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;average&lt;/code&gt;: desktop/office average surround.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;dechroma&lt;/code&gt; : this one is more “subjective”, allowing to control
the amount of chrominance compression that should be applied on values
reaching display maximum (R,G,B=1.0). If HDR imagery needs to be
produced, this can be lowered (as the target domain (hdr) has more
volume to express chroma)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;saturation&lt;/code&gt; : Expand chroma on the bottom values after the compression by
the dechroma.
See more &lt;a href="https://community.acescentral.com/t/proposal-for-resolving-the-conflict-beween-swappable-core-rendering-vs-doing-everything-in-lmt/4012/9"&gt;here&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;code&gt;whitepoint&lt;/code&gt; : (from doc) Sets the creative whitepoint. This allows
you to creatively set the whitepoint of your display rendering if
you want it to be different than the technical whitepoint of your
display device. For example, if you set this to D55, neutral colors will
be rendered as a warmer hue compared to the default D65.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;display encoding&lt;/code&gt; : &lt;em&gt;This part will be re-addressed under.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;
The &lt;code&gt;eotf&lt;/code&gt; should correspond to the transfer-function used by the
targeted display.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href="https://www.itu.int/dms_pubrec/itu-r/rec/bt/R-REC-BT.1886-0-201103-I!!PDF-E.pdf"&gt;BT.1886&lt;/a&gt;
, the default value, correspond to a 2.4 power function,
which is the standard for Rec.709.&lt;br /&gt;
For the average of user display you should use &lt;code&gt;sRGB Display&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
The &lt;code&gt;gamut&lt;/code&gt; correspond once again to the gamut that the targeted display
is calibrated to. (reminder that sRGB use the same gamut as Rec.709)&lt;br /&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="m-transition"&gt;.&lt;/p&gt;
&lt;p&gt;To adjust these settings properly &lt;strong&gt;you have to know the targeted display&lt;/strong&gt;
&lt;strong&gt;+ user&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;The issue is that with today range of displays, this is a rather difficult one
to average (until you have the full-control on the display the image is
going to be viewed on )&lt;/p&gt;
&lt;p&gt;
In the case of web publishing, for example, the average user will probably
have a SDR display, sRGB encoded, with an average white peak of 100 nits and
used in an office environment that can be brighter than a &lt;code&gt;dim&lt;/code&gt; surround.
If we add smartphones to the equation, thing will get messy …&lt;br /&gt;
I’m still digging on the subject trying to gather more info and as such will
close this topic.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;So for now, using the presets is, I think a good practice.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="nuke"&gt;
&lt;h2&gt;&lt;a href="#id3"&gt;Nuke&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;(For now i’m only going to show how you can use it in Nuke as I don’t have
a Resolve License)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1. &lt;a href="https://raw.githubusercontent.com/jedypod/open-display-transform/main/display-transforms/nuke/OpenDRT.nk"&gt;Download the .nk file&lt;/a&gt;
(Right click on the page &amp;gt; save as &amp;gt; save it somewhere)&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Import the .nk file: File &amp;gt; Insert Comp Nodes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Or alternatively :&lt;/p&gt;
&lt;p&gt;1. &lt;a href="https://raw.githubusercontent.com/jedypod/open-display-transform/main/display-transforms/nuke/OpenDRT.nk"&gt;Open the .nk&lt;/a&gt;
file and copy all of his content &lt;code&gt;(ctrl+a, ctrl+c)&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Paste in Nuke &lt;code&gt;(ctrl+v)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alright, you now have the OpenDRT node.&lt;/p&gt;
&lt;section id="node-setup"&gt;
&lt;h3&gt;&lt;a href="#id4"&gt;Node Setup&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Things will now get a bit complicated at first. The issue is that has the
OpenDRT handle the scene -&amp;gt; display conversion, this will collide with Nuke
that try to do the same in the view-transform.&lt;/p&gt;
&lt;p&gt;I found 4 different solutions that achieve the same result. I think the last
one is recommend to use but it’s good to have other example that might help to
understand how everything works.&lt;/p&gt;
&lt;aside class="m-note m-warning"&gt;
I didn’t test any of these solutions with HDR display-encoding so
further investigation needs to be done.&lt;/aside&gt;
&lt;aside class="m-note m-info"&gt;
I will keep the defaut &lt;code&gt;BT.1886&lt;/code&gt; value for the eotf, but to match the
nuke’s default config I should have use &lt;code&gt;sRGB Display&lt;/code&gt;.&lt;/aside&gt;
&lt;section id="revert-display"&gt;
&lt;h4&gt;&lt;a href="#id5"&gt;Revert Display&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;We let the DRT handle everything (with display-encoding), then we apply the
invert transform that applied by Nuke:&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0004/nuke.revert.png"&gt;&lt;img alt="Revert Display method in Nuke" src="https://mrlixm.github.io/static/images/blog/0004/nuke.revert.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Writing the data is as before. You just have to be sure that the &lt;code&gt;Colorspace&lt;/code&gt;
node has the same &lt;code&gt;in&lt;/code&gt; parameters as the &lt;code&gt;colorspace&lt;/code&gt; one on the write node.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="nuke-display-encoding-disable"&gt;
&lt;h4&gt;&lt;a href="#id6"&gt;Nuke Display-encoding disable&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;We disable Nuke’s handling of the display-encoding. The DRT is the last step.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0004/nuke.nuke_no-de.png"&gt;&lt;img alt="Method with Nuke display-encoding disable" src="https://mrlixm.github.io/static/images/blog/0004/nuke.nuke_no-de.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;This means the Nuke view-transform is always off which can be incovenient
when you need to preview a node upstream.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="opendrt-no-display-encoding"&gt;
&lt;h4&gt;&lt;a href="#id7"&gt;OpenDRT no Display-encoding&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;One good solution: the OpenDRT doesn’t handle the display
encoding but output closed-domain data ready for the display.
Nuke apply the display-encoding as usually, writing data is the regular
workflow.&lt;/p&gt;
&lt;p&gt;Be careful as OpenDRT still handle the gamut conversion from the input to the
output. Write node colorspace need to be choosen with this is mind.&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0004/nuke.drt_no-de.png"&gt;&lt;img alt="Method with OpenDRT display-encoding disable." src="https://mrlixm.github.io/static/images/blog/0004/nuke.drt_no-de.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id="opendrt-with-viewer-input-process-recommended"&gt;
&lt;h4&gt;&lt;a href="#id8"&gt;OpenDRT with Viewer Input Process (recommended)&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This is probably the best solution :&lt;/p&gt;
&lt;p&gt;
OpenDRT handle everything, we disable Nuke view-transform but we will be
using its &lt;a href="https://learn.foundry.com/nuke/content/getting_started/using_interface/guides_masks_modes.html#InputProcessandViewerProcessControls"&gt;input process feature&lt;/a&gt;.&lt;br /&gt;
This will allow to always have the OpenDRT active no matter what node we are
previewing &lt;span class="m-text m-warning"&gt;(this can be inconvenient when viewing scalar data like
alpha, think to disable the input-process in that case.)&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="m-image"&gt;
&lt;a href="https://mrlixm.github.io/static/images/blog/0004/nuke.ip.png"&gt;&lt;img alt="Method with OpenDRT + Nuke Input Process" src="https://mrlixm.github.io/static/images/blog/0004/nuke.ip.png" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;We don’t actually need the node used as input-process to be connected to
anything but here &lt;strong&gt;I’m making sure it’s connected before the write node&lt;/strong&gt;, so
OpenDRT get baked in at export.&lt;/p&gt;
&lt;p&gt;As OpenDRT handled the display encoding we can turn it off on the write node
by checking &lt;code&gt;raw data&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;&lt;a href="#id9"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you tried to compare the result to an ACES processed image you would have
probably notice that the image-formation produce much more “excepted” result,
among others, in strong colored highlights, which make OpenDRT a solid
candidate at better image-formation and a peak of what could be used in the
future.&lt;/p&gt;
&lt;p&gt;Even if it’s current form kind of break the purpose of a consistant
color-managed system across DCCs, it is a nice solution for individuals and
looks very promising.
(Jed told me it could be actually pretty simple to create an OCIO config so
we can only hope he finds time to !).&lt;/p&gt;
&lt;p&gt;Make sure to star &lt;a href="https://github.com/jedypod/open-display-transform"&gt;Jed’s repository&lt;/a&gt;
on Github !&lt;/p&gt;
&lt;/section&gt;
</content><category term="tutorial"></category><category term="nuke"></category><category term="resolve"></category><category term="ACES"></category><category term="tonemapping"></category><category term="color-science"></category></entry></feed>